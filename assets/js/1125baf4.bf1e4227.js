"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[49645],{74346:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>o});var a=i(85893),s=i(11151);const t={title:"Review Container Security findings",slug:"/r/Review_Container_Security_Findings"},c=void 0,r={id:"guides/cli/containter_security/review_container_findings",title:"Review Container Security findings",description:"After you complete a Veracode Container Security scan, your results appear in your command window. If you include the -o flag, the results appear in a new file. Scan results include the following categories of findings:",source:"@site/docs/guides/13_cli/03_containter_security/02_review_container_findings.md",sourceDirName:"guides/13_cli/03_containter_security",slug:"/r/Review_Container_Security_Findings",permalink:"/km-docusaurus-test/r/Review_Container_Security_Findings",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Review Container Security findings",slug:"/r/Review_Container_Security_Findings"},sidebar:"tutorialSidebar",previous:{title:"Scan with Veracode Container Security",permalink:"/km-docusaurus-test/r/Scan_with_Veracode_Container_Security"},next:{title:"Generate an SBOM with Veracode Container Security",permalink:"/km-docusaurus-test/r/Generate_an_SBOM_with_Veracode_Container_Security"}},l={},o=[{value:"Policy evaluations",id:"policy-evaluations",level:2},{value:"Vulnerability data sources",id:"vulnerability-data-sources",level:2},{value:"Example JSON findings",id:"example-json-findings",level:2},{value:"Example table findings",id:"example-table-findings",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["After you complete a Veracode Container Security scan, your results appear in your command window. If you include the ",(0,a.jsx)(n.code,{children:"-o"})," flag, the results appear in a new file. Scan results include the following categories of findings:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Known vulnerabilities: vulnerabilities known in the ",(0,a.jsx)(n.a,{href:"https://github.com/anchore/grype#grypes-database",children:"Grype database"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Configuration issues in infrastructure as code (IaC) files: ",(0,a.jsx)(n.a,{href:"https://aquasecurity.github.io/trivy/v0.19.2/misconfiguration/iac/",children:"misconfigurations in IaC files"}),", such as Dockerfiles, Kubernetes manifests, and Terraform files."]}),"\n",(0,a.jsxs)(n.li,{children:["Exposed secrets: ",(0,a.jsx)(n.a,{href:"https://aquasecurity.github.io/trivy/v0.27.1/docs/secret/scanning/",children:"insecurely storing, using, and managing secrets"}),", including credentials and cryptographic keys."]}),"\n",(0,a.jsxs)(n.li,{children:["Docker CIS Benchmark violations: violations of the guidelines defined in the ",(0,a.jsx)(n.a,{href:"https://learn.cisecurity.org/benchmarks",children:"CIS Docker Benchmarks"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Insecure file permissions: insecure permissions using ",(0,a.jsxs)(n.a,{href:"https://www.cbtnuggets.com/blog/technology/system-admin/linux-file-permissions-understanding-setuid-setgid-and-the-sticky-bit",children:[(0,a.jsx)(n.code,{children:"setuid"})," and ",(0,a.jsx)(n.code,{children:"setgid"})]}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Using the ",(0,a.jsx)(n.a,{href:"/km-docusaurus-test/r/veracode_scan",children:(0,a.jsx)(n.code,{children:"--format"})})," flag, you can specify the output format of the scan results, such as JSON, CycloneDX, or a table. For more details about the supported output formats."]}),"\n",(0,a.jsx)(n.h2,{id:"policy-evaluations",children:"Policy evaluations"}),"\n",(0,a.jsxs)(n.p,{children:["Veracode Container Security performs a basic policy evaluation against the findings. If the scan identifies any of the following findings, it returns ",(0,a.jsx)(n.code,{children:'"policy-passed": false'}),"."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Known vulnerabilities, configuration issues in infrastructure as code (IaC) files, or exposed secrets with a ",(0,a.jsx)(n.a,{href:"/km-docusaurus-test/r/review_severity_exploitability",children:"very high or high severity"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Any Docker CIS Benchmark violation."}),"\n",(0,a.jsx)(n.li,{children:"Any insecure file permissions."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["If none of those findings are present, the scan returns ",(0,a.jsx)(n.code,{children:'"policy-passed": true'}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"vulnerability-data-sources",children:"Vulnerability data sources"}),"\n",(0,a.jsx)(n.p,{children:"Veracode Container Security uses several data sources when reporting vulnerability findings, including:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://secdb.alpinelinux.org/",children:"Alpine Linux SecDB"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://alas.aws.amazon.com/AL2/alas.rss",children:"Amazon Linux ALAS"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://security-tracker.debian.org/tracker/data/json",children:"Debian Linux Bug Tracker"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/advisories",children:"Github GHSAs"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://nvd.nist.gov/vuln/data-feeds",children:"National Vulnerability Database (NVD)"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://linux.oracle.com/security/oval/",children:"Oracle Linux OVAL"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://access.redhat.com/documentation/en-us/red_hat_security_data_api/1.0",children:"Red Hat Linux Security Data"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.redhat.com/security/data/oval/",children:"RedHat RHSAs: Security Data"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://ftp.suse.com/pub/projects/security/oval/",children:"SUSE Linux OVAL"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://people.canonical.com/~ubuntu-security/",children:"Ubuntu Linux Security"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"In some cases, the severity that Veracode reports for a CVE differs from the severity from the NVD. When a more specific source, such as a base image vulnerability database, provides a severity for a CVE, that more specific source takes precedence."}),"\n",(0,a.jsx)(n.h2,{id:"example-json-findings",children:"Example JSON findings"}),"\n",(0,a.jsx)(n.p,{children:"This sample output is the result of a scan request in readable JSON format:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'./veracode scan --source alpine:latest --type image -f json\n\n{\n  "vulnerabilities": {\n    "descriptor": {\n      "configuration": "",\n      "db": {\n        "built": "2023-01-23T08:17:51Z",\n        "checksum": "sha256:45441cfa64a877caea9c231a17c508f7d43cae415dce7103f2ba236a35e466f7",\n        "error": null,\n        "location": "5",\n        "schemaVersion": 5\n      },\n      "name": "grype",\n      "version": "[not provided]"\n    },\n    "distro": {\n      "idLike": [],\n      "name": "alpine",\n      "version": "3.17.0"\n    },\n    "matches": [\n      {\n        "artifact": {\n          "cpes": [\n            "cpe:2.3:a:libcrypto3:libcrypto3:3.0.7-r0:*:*:*:*:*:*:*"\n          ],\n          "language": "",\n          "licenses": [\n            "Apache-2.0"\n          ],\n          "locations": [\n            {\n              "layerID": "sha256:1b577a8fb8ce25023a0ec0a17a6dc3d6aa9cca989f75457800cb55179ee2e834",\n              "path": "/lib/apk/db/installed"\n            }\n          ],\n          "name": "libcrypto3",\n          "purl": "pkg:alpine/libcrypto3@3.0.7-r0?arch=aarch64\\u0026upstream=openssl\\u0026distro=alpine-3.17.0",\n          "type": "apk",\n          "upstreams": [\n            {\n              "name": "openssl"\n            }\n          ],\n          "version": "3.0.7-r0"\n        },\n        "matchDetails": [\n          {\n            "found": {\n              "versionConstraint": "\\u003c 3.0.7-r2 (apk)"\n            },\n            "matcher": "apk-matcher",\n            "searchedBy": {\n              "distro": {\n                "type": "alpine",\n                "version": "3.17.0"\n              },\n              "namespace": "alpine:distro:alpine:3.17",\n              "package": {\n                "name": "openssl",\n                "version": "3.0.7-r0"\n              }\n            },\n            "type": "exact-indirect-match"\n          }\n        ],\n        "relatedVulnerabilities": [\n          {\n            "cvss": [\n              {\n                "metrics": {\n                  "baseScore": 7.5,\n                  "exploitabilityScore": 3.9,\n                  "impactScore": 3.6\n                },\n                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",\n                "vendorMetadata": {},\n                "version": "3.1"\n              }\n            ],\n            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-3996",\n            "description": "If an X.509 certificate contains a malformed policy constraint and policy processing is enabled, then a write lock will be taken twice recursively. On some operating systems (most widely: Windows) this results in a denial of service when the affected process hangs. Policy processing being enabled on a publicly facing server is not considered to be a common setup. Policy processing is enabled by passing the `-policy\' argument to the command line utilities or by calling either `X509_VERIFY_PARAM_add0_policy()\' or `X509_VERIFY_PARAM_set1_policies()\' functions.",\n            "id": "CVE-2022-3996",\n            "namespace": "nvd:cpe",\n            "severity": "High",\n            "urls": [\n              "https://github.com/openssl/openssl/commit/7725e7bfe6f2ce8146b6552b44e0d226be7638e7",\n              "https://www.openssl.org/news/secadv/20221213.txt"\n            ]\n          }\n        ],\n        "vulnerability": {\n          "advisories": [],\n          "cvss": [],\n          "dataSource": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3996",\n          "fix": {\n            "state": "fixed",\n            "versions": [\n              "3.0.7-r2"\n            ]\n          },\n          "id": "CVE-2022-3996",\n          "namespace": "alpine:distro:alpine:3.17",\n          "severity": "High",\n          "urls": [\n            "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3996"\n          ]\n        }\n      },\n      {\n        "artifact": {\n          "cpes": [\n            "cpe:2.3:a:libssl3:libssl3:3.0.7-r0:*:*:*:*:*:*:*"\n          ],\n          "language": "",\n          "licenses": [\n            "Apache-2.0"\n          ],\n          "locations": [\n            {\n              "layerID": "sha256:1b577a8fb8ce25023a0ec0a17a6dc3d6aa9cca989f75457800cb55179ee2e834",\n              "path": "/lib/apk/db/installed"\n            }\n          ],\n          "name": "libssl3",\n          "purl": "pkg:alpine/libssl3@3.0.7-r0?arch=aarch64\\u0026upstream=openssl\\u0026distro=alpine-3.17.0",\n          "type": "apk",\n          "upstreams": [\n            {\n              "name": "openssl"\n            }\n          ],\n          "version": "3.0.7-r0"\n        },\n        "matchDetails": [\n          {\n            "found": {\n              "versionConstraint": "\\u003c 3.0.7-r2 (apk)"\n            },\n            "matcher": "apk-matcher",\n            "searchedBy": {\n              "distro": {\n                "type": "alpine",\n                "version": "3.17.0"\n              },\n              "namespace": "alpine:distro:alpine:3.17",\n              "package": {\n                "name": "openssl",\n                "version": "3.0.7-r0"\n              }\n            },\n            "type": "exact-indirect-match"\n          }\n        ],\n        "relatedVulnerabilities": [\n          {\n            "cvss": [\n              {\n                "metrics": {\n                  "baseScore": 7.5,\n                  "exploitabilityScore": 3.9,\n                  "impactScore": 3.6\n                },\n                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",\n                "vendorMetadata": {},\n                "version": "3.1"\n              }\n            ],\n            "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2022-3996",\n            "description": "If an X.509 certificate contains a malformed policy constraint and policy processing is enabled, then a write lock will be taken twice recursively. On some operating systems (most widely: Windows) this results in a denial of service when the affected process hangs. Policy processing being enabled on a publicly facing server is not considered to be a common setup. Policy processing is enabled by passing the `-policy\' argument to the command line utilities or by calling either `X509_VERIFY_PARAM_add0_policy()\' or `X509_VERIFY_PARAM_set1_policies()\' functions.",\n            "id": "CVE-2022-3996",\n            "namespace": "nvd:cpe",\n            "severity": "High",\n            "urls": [\n              "https://github.com/openssl/openssl/commit/7725e7bfe6f2ce8146b6552b44e0d226be7638e7",\n              "https://www.openssl.org/news/secadv/20221213.txt"\n            ]\n          }\n        ],\n        "vulnerability": {\n          "advisories": [],\n          "cvss": [],\n          "dataSource": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3996",\n          "fix": {\n            "state": "fixed",\n            "versions": [\n              "3.0.7-r2"\n            ]\n          },\n          "id": "CVE-2022-3996",\n          "namespace": "alpine:distro:alpine:3.17",\n          "severity": "High",\n          "urls": [\n            "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3996"\n          ]\n        }\n      }\n    ],\n    "source": {\n      "target": {\n        "architecture": "arm64",\n        "config": "eyJhcmNoaXRlY3R1cmUiOiJhcm02NCIsImNvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iXSwiQ21kIjpbIi9iaW4vc2giXSwiSW1hZ2UiOiJzaGEyNTY6OWI1NGRkZTNiM2Q5ZWFhOGMwNzFlZThlN2NkYTk5OGUwZmRiZWIzNmY3NjhhNmY4NWExYTEyMTlkZjUxYzI0ZiIsIlZvbHVtZXMiOm51bGwsIldvcmtpbmdEaXIiOiIiLCJFbnRyeXBvaW50IjpudWxsLCJPbkJ1aWxkIjpudWxsLCJMYWJlbHMiOm51bGx9LCJjb250YWluZXIiOiIyMTIyNTZhODRiMDEyNzhlYTQ3Y2QzY2QyZjRhMjA0OTA0ZDZkOTk4MjU2NTlmZDBjNDIxMGI3MWUzY2I1NWYxIiwiY29udGFpbmVyX2NvbmZpZyI6eyJIb3N0bmFtZSI6IjIxMjI1NmE4NGIwMSIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iXSwiQ21kIjpbIi9iaW4vc2giLCItYyIsIiMobm9wKSAiLCJDTUQgW1wiL2Jpbi9zaFwiXSJdLCJJbWFnZSI6InNoYTI1Njo5YjU0ZGRlM2IzZDllYWE4YzA3MWVlOGU3Y2RhOTk4ZTBmZGJlYjM2Zjc2OGE2Zjg1YTFhMTIxOWRmNTFjMjRmIiwiVm9sdW1lcyI6bnVsbCwiV29ya2luZ0RpciI6IiIsIkVudHJ5cG9pbnQiOm51bGwsIk9uQnVpbGQiOm51bGwsIkxhYmVscyI6e319LCJjcmVhdGVkIjoiMjAyMi0xMS0yMlQyMjozOToyMS4xNzY0OTA5MDVaIiwiZG9ja2VyX3ZlcnNpb24iOiIyMC4xMC4xNyIsImhpc3RvcnkiOlt7ImNyZWF0ZWQiOiIyMDIyLTExLTIyVDIyOjM5OjIxLjAzMzk3MDQxM1oiLCJjcmVhdGVkX2J5IjoiL2Jpbi9zaCAtYyAjKG5vcCkgQUREIGZpbGU6Njg1YjVlZGFkZjFkNWJmMGFlYjJhZWMzNWY4MTBkODM4NzZlNmQyZWEwOTAzYjIxM2Y3NWE5YzVmMGRjNTkwMSBpbiAvICJ9LHsiY3JlYXRlZCI6IjIwMjItMTEtMjJUMjI6Mzk6MjEuMTc2NDkwOTA1WiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSAgQ01EIFtcIi9iaW4vc2hcIl0iLCJlbXB0eV9sYXllciI6dHJ1ZX1dLCJvcyI6ImxpbnV4Iiwicm9vdGZzIjp7InR5cGUiOiJsYXllcnMiLCJkaWZmX2lkcyI6WyJzaGEyNTY6MWI1NzdhOGZiOGNlMjUwMjNhMGVjMGExN2E2ZGMzZDZhYTljY2E5ODlmNzU0NTc4MDBjYjU1MTc5ZWUyZTgzNCJdfSwidmFyaWFudCI6InY4In0=",\n        "imageID": "sha256:d3156fec8bcbc7b491a4edc271a7734dcfa186fc73282d4e120eeaaf2ce95c43",\n        "imageSize": 7454073,\n        "layers": [\n          {\n            "digest": "sha256:1b577a8fb8ce25023a0ec0a17a6dc3d6aa9cca989f75457800cb55179ee2e834",\n            "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",\n            "size": 7454073\n          }\n        ],\n        "manifest": "eyJzY2hlbWFWZXJzaW9uIjoyLCJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmRpc3RyaWJ1dGlvbi5tYW5pZmVzdC52Mitqc29uIiwiY29uZmlnIjp7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuY29udGFpbmVyLmltYWdlLnYxK2pzb24iLCJzaXplIjoxNDg3LCJkaWdlc3QiOiJzaGEyNTY6ZDMxNTZmZWM4YmNiYzdiNDkxYTRlZGMyNzFhNzczNGRjZmExODZmYzczMjgyZDRlMTIwZWVhYWYyY2U5NWM0MyJ9LCJsYXllcnMiOlt7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjo3NzQ1NTM2LCJkaWdlc3QiOiJzaGEyNTY6MWI1NzdhOGZiOGNlMjUwMjNhMGVjMGExN2E2ZGMzZDZhYTljY2E5ODlmNzU0NTc4MDBjYjU1MTc5ZWUyZTgzNCJ9XX0=",\n        "manifestDigest": "sha256:fcf2aaf52719a175f453a6a3f18a3859b8a68150cd5e33d37a3e1fb7205b9c7d",\n        "mediaType": "application/vnd.docker.distribution.manifest.v2+json",\n        "os": "linux",\n        "repoDigests": [\n          "alpine@sha256:8914eb54f968791faf6a8638949e480fef81e697984fba772b3976835194c6d4"\n        ],\n        "tags": [\n          "alpine:latest"\n        ],\n        "userInput": "alpine:latest"\n      },\n      "type": "image"\n    }\n  },\n  "secrets": {\n    "ArtifactName": "alpine:latest",\n    "ArtifactType": "container_image",\n    "Metadata": {\n      "DiffIDs": [\n        "sha256:1b577a8fb8ce25023a0ec0a17a6dc3d6aa9cca989f75457800cb55179ee2e834"\n      ],\n      "ImageConfig": {\n        "architecture": "arm64",\n        "config": {\n          "Cmd": [\n            "/bin/sh"\n          ],\n          "Env": [\n            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"\n          ],\n          "Image": "sha256:9b54dde3b3d9eaa8c071ee8e7cda998e0fdbeb36f768a6f85a1a1219df51c24f"\n        },\n        "container": "212256a84b01278ea47cd3cd2f4a204904d6d99825659fd0c4210b71e3cb55f1",\n        "created": "2022-11-22T22:39:21.176490905Z",\n        "docker_version": "20.10.17",\n        "history": [\n          {\n            "created": "2022-11-22T22:39:21Z",\n            "created_by": "/bin/sh -c #(nop) ADD file:685b5edadf1d5bf0aeb2aec35f810d83876e6d2ea0903b213f75a9c5f0dc5901 in / "\n          },\n          {\n            "created": "2022-11-22T22:39:21Z",\n            "created_by": "/bin/sh -c #(nop)  CMD [\\"/bin/sh\\"]",\n            "empty_layer": true\n          }\n        ],\n        "os": "linux",\n        "rootfs": {\n          "diff_ids": [\n            "sha256:1b577a8fb8ce25023a0ec0a17a6dc3d6aa9cca989f75457800cb55179ee2e834"\n          ],\n          "type": "layers"\n        }\n      },\n      "ImageID": "sha256:d3156fec8bcbc7b491a4edc271a7734dcfa186fc73282d4e120eeaaf2ce95c43",\n      "OS": {\n        "Family": "alpine",\n        "Name": "3.17.0"\n      },\n      "RepoDigests": [\n        "alpine@sha256:8914eb54f968791faf6a8638949e480fef81e697984fba772b3976835194c6d4"\n      ],\n      "RepoTags": [\n        "alpine:latest"\n      ]\n    },\n    "SchemaVersion": 2\n  },\n  "configs": {\n    "ArtifactName": "alpine:latest",\n    "ArtifactType": "container_image",\n    "Metadata": {\n      "DiffIDs": [\n        "sha256:1b577a8fb8ce25023a0ec0a17a6dc3d6aa9cca989f75457800cb55179ee2e834"\n      ],\n      "ImageConfig": {\n        "architecture": "arm64",\n        "config": {\n          "Cmd": [\n            "/bin/sh"\n          ],\n          "Env": [\n            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"\n          ],\n          "Image": "sha256:9b54dde3b3d9eaa8c071ee8e7cda998e0fdbeb36f768a6f85a1a1219df51c24f"\n        },\n        "container": "212256a84b01278ea47cd3cd2f4a204904d6d99825659fd0c4210b71e3cb55f1",\n        "created": "2022-11-22T22:39:21.176490905Z",\n        "docker_version": "20.10.17",\n        "history": [\n          {\n            "created": "2022-11-22T22:39:21Z",\n            "created_by": "/bin/sh -c #(nop) ADD file:685b5edadf1d5bf0aeb2aec35f810d83876e6d2ea0903b213f75a9c5f0dc5901 in / "\n          },\n          {\n            "created": "2022-11-22T22:39:21Z",\n            "created_by": "/bin/sh -c #(nop)  CMD [\\"/bin/sh\\"]",\n            "empty_layer": true\n          }\n        ],\n        "os": "linux",\n        "rootfs": {\n          "diff_ids": [\n            "sha256:1b577a8fb8ce25023a0ec0a17a6dc3d6aa9cca989f75457800cb55179ee2e834"\n          ],\n          "type": "layers"\n        }\n      },\n      "ImageID": "sha256:d3156fec8bcbc7b491a4edc271a7734dcfa186fc73282d4e120eeaaf2ce95c43",\n      "OS": {\n        "Family": "alpine",\n        "Name": "3.17.0"\n      },\n      "RepoDigests": [\n        "alpine@sha256:8914eb54f968791faf6a8638949e480fef81e697984fba772b3976835194c6d4"\n      ],\n      "RepoTags": [\n        "alpine:latest"\n      ]\n    },\n    "SchemaVersion": 2\n  },\n  "policy-results": [\n    {\n      "filename": "root",\n      "namespace": "main",\n      "successes": 5,\n      "failures": [\n        {\n          "msg": "vulnerability.rego failed - Found High software vulnerability: CVE-2022-3996"\n        },\n        {\n          "msg": "docker.rego failed - 4.1 Ensure a user for the container has been created (Scored) level 1"\n        },\n        {\n          "msg": "docker.rego failed - 4.6 Ensure HEALTHCHECK instructions have been added to the container image (Scored) level 1"\n        },\n        {\n          "msg": "docker.rego failed - 4.9 Ensure COPY is used instead of ADD in Dockerfile (Not Scored) level 1"\n        }\n      ]\n    }\n  ],\n  "policy-passed": false\n}                                                   \n'})}),"\n",(0,a.jsx)(n.h2,{id:"example-table-findings",children:"Example table findings"}),"\n",(0,a.jsxs)(n.p,{children:["Scans with the ",(0,a.jsx)(n.code,{children:"table"})," format flag display results in four sections: Vulnerabilities, Misconfigurations, Secrets, and Policy Results. Each section provides details, such as the type and severity, of each finding."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"./veracode scan --source https://github.com/bridgecrewio/terragoat  --type repo -f table\n\nVulnerabilities\nNAME                  INSTALLED  FIXED-IN  TYPE          VULNERABILITY        SEVERITY \n@actions/core         1.6.0      1.9.1     npm           GHSA-7r3h-m5j6-3q42  Medium    \n@xmldom/xmldom        0.7.5      0.7.7     npm           GHSA-crh6-fp67-6883  Critical  \nasync                 2.6.3      2.6.4     npm           GHSA-fwr7-v2mv-hh25  High      \ncommons-compress      1.15       1.19      java-archive  GHSA-53x6-4x5p-rrvv  High      \ncommons-compress      1.20       1.21      java-archive  GHSA-7hfm-57qf-j43q  High      \n...\n\nMisconfigurations\nTITLE                                                                           \tPROVIDER  \tID          \tSEVERITY \naws_instance should activate session tokens for Instance Metadata Service.      \tAWS       \tAVD-AWS-0028\tHIGH    \t\nIAM policy should avoid use of wildcards and instead apply the principle of     \tAWS       \tAVD-AWS-0057\tHIGH    \t\nleast privilege                                                                 \t          \t            \t        \t                                                               \t          \t            \t        \t                                                               \t          \t            \t        \t\nRDS Cluster and RDS instance should have backup retention longer than default 1 \tAWS       \tAVD-AWS-0077\tMEDIUM  \t\nday                                                                             \t          \t            \t        \t\nRDS encryption has not been enabled at a DB Instance level.                     \tAWS       \tAVD-AWS-0080\tHIGH    \t\nA database resource is marked as publicly accessible.                           \tAWS       \tAVD-AWS-0082\tCRITICAL\t\n...\n\nSecrets\nFILE                      \tSECRET TYPE          \tSEVERITY \nterraform/aws/ec2.tf      \tAWS Access Key ID    \tCRITICAL\t\nterraform/aws/ec2.tf      \tAWS Secret Access Key\tCRITICAL\t\nterraform/aws/lambda.tf   \tAWS Access Key ID    \tCRITICAL\t\nterraform/aws/lambda.tf   \tAWS Secret Access Key\tCRITICAL\t\nterraform/aws/providers.tf\tAWS Access Key ID    \tCRITICAL\t\nterraform/aws/providers.tf\tAWS Secret Access Key\tCRITICAL\t\n...\n\nPolicy Results\nTYPE         \tMESSAGE                                                                          \nConfig       \tFound CRITICAL issues in infrastructure as code: terraform/aws/db-app.tf: A     \t\n             \tdatabase resource is marked as publicly accessible.                             \t\nConfig       \tFound CRITICAL issues in infrastructure as code: terraform/aws/db-app.tf: An    \t\n             \tegress security group rule allows traffic to /0.                                \t                              \t\nSecret       \tFound CRITICAL secret: terraform/aws/ec2.tf: AWS Access Key ID                  \t\nSecret       \tFound CRITICAL secret: terraform/aws/ec2.tf: AWS Secret Access Key              \t    \t\nVulnerability\tFound Critical software vulnerability: GHSA-4w2j-2rg4-5mjw                      \t\nVulnerability\tFound Critical software vulnerability: GHSA-6pw2-5hjv-9pf7                      \t\n...\n\nPolicy Passed = false\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>c});var a=i(67294);const s={},t=a.createContext(s);function c(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);