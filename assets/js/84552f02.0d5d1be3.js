"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[57456],{93788:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var s=i(85893),a=i(11151);const t={title:"Create a credentials variable for Dynamic Analysis login scripts with the REST API",slug:"/r/Create_a_Credentials_Variable_for_Dynamic_Analysis_Login_Scripts_with_the_REST_API"},r=void 0,c={id:"guides/apis/rest_apis/dynamic_rest_api/dynamic_api_create_creds_var_login_script",title:"Create a credentials variable for Dynamic Analysis login scripts with the REST API",description:"You can use the Dynamic Analysis API to update credentials fields in login scripts by creating a scan engine variable that the API uses at runtime.",source:"@site/docs/guides/14_apis/04_rest_apis/05_dynamic_rest_api/06_dynamic_api_create_creds_var_login_script.md",sourceDirName:"guides/14_apis/04_rest_apis/05_dynamic_rest_api",slug:"/r/Create_a_Credentials_Variable_for_Dynamic_Analysis_Login_Scripts_with_the_REST_API",permalink:"/km-docusaurus-test/r/Create_a_Credentials_Variable_for_Dynamic_Analysis_Login_Scripts_with_the_REST_API",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Create a credentials variable for Dynamic Analysis login scripts with the REST API",slug:"/r/Create_a_Credentials_Variable_for_Dynamic_Analysis_Login_Scripts_with_the_REST_API"},sidebar:"tutorialSidebar",previous:{title:"Create a Dynamic Analysis of a single URL with prescan verification using the REST API",permalink:"/km-docusaurus-test/r/Create_a_Dynamic_Analysis_of_a_Single_URL_with_Prescan_Verification_Using_the_REST_API"},next:{title:"Create an authenticated Dynamic Analysis with the REST API",permalink:"/km-docusaurus-test/r/t_dynamic_logins"}},o={},l=[];function d(e){const n={a:"a",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"You can use the Dynamic Analysis API to update credentials fields in login scripts by creating a scan engine variable that the API uses at runtime."}),"\n",(0,s.jsx)(n.p,{children:"With a variable login script you do not need to know the credentials for the application to which Dynamic Analysis is logging in, nor do you need to create a new login script every time the credentials values change."}),"\n",(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.a,{href:"/km-docusaurus-test/r/Example_Selenium_scripts",children:"example Selenium scripts"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Example Python code for using the scan engine variables API feature is available from ",(0,s.jsx)(n.a,{href:"https://github.com/anon-veracoder/veracode-dynamic-analysis-api-examples",children:"https://github.com/anon-veracoder/veracode-dynamic-analysis-api-examples"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"To complete this task:"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add the values for the ",(0,s.jsx)(n.code,{children:"description"}),", ",(0,s.jsx)(n.code,{children:"value"}),", and, optional, ",(0,s.jsx)(n.code,{children:"reference_key"})," properties in the JSON file. The reference key is the value you use in your login script. Alternatively, you can use the ",(0,s.jsx)(n.code,{children:"scanner_variable_id"})," that the API returns in response to a POST in your login scripts."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Send the following request:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'http --auth-type=veracode_hmac POST "https://api.veracode.com/was/configservice/v1/scanner_variables" < input.json\n'})}),"\n",(0,s.jsx)(n.p,{children:"This is an example of how to create a new scan engine variable key-value pair:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n   "description": "Password key for my application",\n   "reference_key": "MY_PASSWORD_KEY",\n   "value": "Passw0rd123"\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["This example adds the ",(0,s.jsx)(n.code,{children:"totp"})," property set to ",(0,s.jsx)(n.code,{children:"true"})," to add Time-based One-Time Passwords (TOTP) support. You use TOTP for URLs that require multi-factor authentication (MFA). See the ",(0,s.jsx)(n.a,{href:"/km-docusaurus-test/r/Example_Selenium_scripts",children:"example Selenium scripts"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n   "description": "Password key for my application",\n   "reference_key": "MY_PASSWORD_KEY",\n   "value": "Passw0rd123"\n   "totp": true\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["This is an excerpt of a Selenium login script that references the key ",(0,s.jsx)(n.code,{children:"MY_PASSWORD_KEY"}),". When the dynamic scan engine executes the login script, the value ",(0,s.jsx)(n.code,{children:"Passw0rd123"})," replaces the key ",(0,s.jsx)(n.code,{children:"${MY_PASSWORD_KEY}"})," at runtime. The login script does not return the key value, which remains hidden from users."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:' {\n  "name": "Name-of-Your-Dynamic-Analysis",\n  "id": "5045080b-99ad-47e9-a8a6-7897bf4b5975",\n  "comment": "",\n  "request": "type",\n  "target": "name=password",\n  "targets": [\n    [\n      "name=password",\n      "name"\n    ],\n    [\n      "css=tr:nth-child(7) input:nth-child(2)",\n      "css:finder"\n    ],\n    [\n      "xpath=//input[@name=\'password\']",\n      "xpath:attributes"\n    ],\n    [\n      "xpath=//tr[7]/td[2]/form/input[2]",\n      "xpath:position"\n    ]\n  ],\n  "value": "${MY_PASSWORD_KEY}"\n}  \n'})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>r});var s=i(67294);const a={},t=s.createContext(a);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);