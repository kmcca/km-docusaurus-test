"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[87801],{11806:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=i(85893),n=i(11151);const r={title:"Certificate revocation",slug:"/r/certificate-revocation"},a=void 0,c={id:"guides/dynamic_analysis/dast_essentials/dast_essentials_tls_vulns/certificate-revocation",title:"Certificate revocation",description:"The webserver is poorly configured regarding revoked certificates. Certificate Revocation Lists (CRLs) and the Online Certificate Status Protocol (OCSP) ensure that users can verify the integrity of a server certificate.",source:"@site/docs/guides/08_dynamic_analysis/15_dast_essentials/08_dast_essentials_tls_vulns/02_certificate-revocation.md",sourceDirName:"guides/08_dynamic_analysis/15_dast_essentials/08_dast_essentials_tls_vulns",slug:"/r/certificate-revocation",permalink:"/km-docusaurus-test/r/certificate-revocation",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Certificate revocation",slug:"/r/certificate-revocation"},sidebar:"tutorialSidebar",previous:{title:"Harden TLS session resumption",permalink:"/km-docusaurus-test/r/harden-tls-session-resumption"},next:{title:"Configure trusted certificates",permalink:"/km-docusaurus-test/r/configure-trusted-certificates"}},o={},l=[{value:"Security assessment",id:"security-assessment",level:2},{value:"Vulnerability information",id:"vulnerability-information",level:2},{value:"Prevent attacks",id:"prevent-attacks",level:2},{value:"Enable OCSP",id:"enable-ocsp",level:3},{value:"OCSP stapling",id:"ocsp-stapling",level:3},{value:"Let&#39;s Encrypt",id:"lets-encrypt",level:3},{value:"Apache",id:"apache",level:3},{value:"Nginx",id:"nginx",level:3}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",strong:"strong",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"The webserver is poorly configured regarding revoked certificates. Certificate Revocation Lists (CRLs) and the Online Certificate Status Protocol (OCSP) ensure that users can verify the integrity of a server certificate."}),"\n",(0,s.jsx)(t.h2,{id:"security-assessment",children:"Security assessment"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Security_Assessment_CertificateRevocation",src:i(48274).Z+"",width:"907",height:"332"})}),"\n",(0,s.jsxs)(t.p,{children:["CVSS vector: ",(0,s.jsxs)(t.a,{href:"https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",children:["AV",":N","/AC",":H","/PR",":N","/UI",":N","/S",":U","/C",":H","/I",":H","/A",":N"]})]}),"\n",(0,s.jsx)(t.h2,{id:"vulnerability-information",children:"Vulnerability information"}),"\n",(0,s.jsx)(t.p,{children:"The web server is poorly configured regarding revoked certificates. Certificate Revocation Lists (CRLs) and the Online Certificate Status Protocol (OCSP) ensure that users can verify the integrity of a server certificate. If your certificate is compromised, these techniques allow you respectively your certificate authority (CA) to revoke the compromised certificate. Therefore, you can issue a new (valid) certification, and the compromised certificate (used by an attacker) will produce warnings when a user accesses their website."}),"\n",(0,s.jsx)(t.p,{children:"OCSP is the newer method to revoke certificates, as it allows certificate authorities to revoke certificates much faster without the need to update complete revocation lists potentially containing thousands of certificates"}),"\n",(0,s.jsx)(t.h2,{id:"prevent-attacks",children:"Prevent attacks"}),"\n",(0,s.jsx)(t.p,{children:"Use one of the following options to making sure that your certificates can be adequately revoked:"}),"\n",(0,s.jsx)(t.h3,{id:"enable-ocsp",children:"Enable OCSP"}),"\n",(0,s.jsx)(t.p,{children:"Unfortunately, you cannot enable OCSP solely on your own. Your certificate authority needs to operate the OCSP server and store the certificate information there. If your CA does not offer OCSP, consider switching to a CA that supports this feature. If your CA supports OCSP, follow these guides to create a certificate with OCSP enabled."}),"\n",(0,s.jsx)(t.h3,{id:"ocsp-stapling",children:"OCSP stapling"}),"\n",(0,s.jsx)(t.p,{children:"OCSP stapling is an addition to OSCP, where the webserver retrieves the OCSP answer from the OCSP server, which contains a signed timestamp. This answer is sent to the client on the original request. Therefore, the client does not need to send an additional request to the OCSP server. This increases the users' privacy as the CA does not get requests from your users who are accessing your web application."}),"\n",(0,s.jsx)(t.h3,{id:"lets-encrypt",children:"Let's Encrypt"}),"\n",(0,s.jsxs)(t.p,{children:["With Let's Encrypt, it is straightforward to enable OCSP stapling. When creating a new certificate, just add the ",(0,s.jsx)(t.code,{children:"--staple-ocsp"})," flag. If Let's Encrypt has generated your credentials, just run the same command and choose ",(0,s.jsx)(t.strong,{children:"Attempt to reinstall this existing certificate"})," as the first option. This will reuse your certificate and enable OCSP stapling."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"certbot run -d [DOMAIN] --staple-ocsp --hsts\n"})}),"\n",(0,s.jsx)(t.h3,{id:"apache",children:"Apache"}),"\n",(0,s.jsxs)(t.p,{children:["On Apache, you need to get the full certificate chain from your certificate authority and store them in the ",(0,s.jsx)(t.code,{children:"file/etc/ssl/ca-certs.pem"}),". Then update your SSL configuration to include the ",(0,s.jsx)(t.code,{children:"SSLStaplingCache"}),", ",(0,s.jsx)(t.code,{children:"SSLCACertificateFile"})," and ",(0,s.jsx)(t.code,{children:"SSLUseStapling"})," directives:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'<IfModule mod_ssl.c>  \n    SSLStaplingCache shmcb:/tmp/stapling_cache(128000)  \n    <VirtualHost *:443>  \n            Header always set Strict-Transport-Security "max-age=31536000"  \n  \n            ServerAdmin webmaster@localhost  \n            ServerName example.com  \n            DocumentRoot /var/www  \n  \n            SSLEngine on  \n  \n            SSLCertificateFile /etc/apache2/ssl/example.com/apache.crt  \n            SSLCertificateKeyFile /etc/apache2/ssl/example.com/apache.key  \n  \n            SSLCACertificateFile /etc/ssl/ca-certs.pem  \n            SSLUseStapling on  \n    </VirtualHost>  \n</IfModule>\n'})}),"\n",(0,s.jsx)(t.h3,{id:"nginx",children:"Nginx"}),"\n",(0,s.jsxs)(t.p,{children:["On Nginx, you need to get the entire certificate chain from your certificate authority and store them in the file ",(0,s.jsx)(t.code,{children:"/etc/ssl/ca-certs.pem"}),". Then update your SSL configuration to include the ",(0,s.jsx)(t.code,{children:"ssl_stapling"}),", ",(0,s.jsx)(t.code,{children:"ssl_stapling_verify"}),", and ",(0,s.jsx)(t.code,{children:"ssl_trusted_certificate"})," directives:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'server {  \n        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; ";  \n  \n        listen   443;  \n        server_name example.org;  \n  \n        root /usr/share/nginx/www;  \n        index index.html index.htm;  \n  \n        ssl on;  \n        ssl_certificate /etc/nginx/ssl/example.org/server.crt;  \n        ssl_certificate_key /etc/nginx/ssl/example.org/server.key;  \n  \n        ssl_stapling on;  \n        ssl_stapling_verify on;  \n        ssl_trusted_certificate /etc/ssl/private/ca-certs.pem;  \n}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},48274:(e,t,i)=>{i.d(t,{Z:()=>s});const s=i.p+"assets/images/Security_Assessment_ConfigureTrustedCertificates-243dae95f388291f6823fedbc1928805.png"},11151:(e,t,i)=>{i.d(t,{Z:()=>c,a:()=>a});var s=i(67294);const n={},r=s.createContext(n);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);