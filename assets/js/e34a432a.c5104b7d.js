"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[11719],{25048:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var n=t(85893),o=t(11151);const s={title:"Precompile ASP.NET Core MVC views with Visual Studio 2017 or later",slug:"/r/t_MVC2_VS"},r=void 0,l={id:"guides/packaging/net/asp_net_web_apps/t_MVC2_VS",title:"Precompile ASP.NET Core MVC views with Visual Studio 2017 or later",description:"You can use Veracode Static for Visual Studio to precompile and publish your ASP.NET Core web applications.",source:"@site/docs/guides/03_packaging/19_net/02_asp_net_web_apps/01_t_MVC2_VS.md",sourceDirName:"guides/03_packaging/19_net/02_asp_net_web_apps",slug:"/r/t_MVC2_VS",permalink:"/km-docusaurus-test/r/t_MVC2_VS",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Precompile ASP.NET Core MVC views with Visual Studio 2017 or later",slug:"/r/t_MVC2_VS"},sidebar:"tutorialSidebar",previous:{title:"ASP.NET packaging",permalink:"/km-docusaurus-test/r/compilation_ASPnet"},next:{title:"Precompile ASP.NET files with Visual Studio",permalink:"/km-docusaurus-test/r/c_precomp_VS"}},a={},c=[];function p(e){const i={a:"a",code:"code",li:"li",ol:"ol",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:"You can use Veracode Static for Visual Studio to precompile and publish your ASP.NET Core web applications."}),"\n",(0,n.jsxs)(i.p,{children:["This section explains how to use the file Publish functionality in Visual Studio 2017 or later to manually produce a precompiled views DLL file. You can also automate the precompilation using the ",(0,n.jsx)(i.a,{href:"/km-docusaurus-test/r/c_precomp_MS",children:"MSBuild command-line tool"}),"."]}),"\n",(0,n.jsx)(i.p,{children:"This procedure applies to precompiling an application using Visual Studio using ASP.NET Core MVC 2.0."}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["From the ",(0,n.jsx)(i.strong,{children:"Solution Explorer"}),", right-click the web application project file and select ",(0,n.jsx)(i.strong,{children:"Publish..."}),"."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["Verify the ",(0,n.jsx)(i.strong,{children:"Configuration"})," is set to ",(0,n.jsx)(i.strong,{children:"Debug"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["From the ",(0,n.jsx)(i.strong,{children:"Publish"})," tab of your web application, create a folder, and click ",(0,n.jsx)(i.strong,{children:"Publish"}),"."]}),"\n",(0,n.jsx)(i.p,{children:"The output folder contains the application binaries in combination with the precompiled views."}),"\n",(0,n.jsxs)(i.p,{children:["As of ASP.NET Core 6.0, both views and application types are available in a single ",(0,n.jsx)(i.code,{children:"AppName.dll"})," assembly. For more information, see the ",(0,n.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/dotnet/core/compatibility/aspnet-core/6.0/razor-compiler-doesnt-produce-views-assembly",children:"Microsoft documentation"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["After precompiling the web application, zip the folder containing the published output, and upload it to the Veracode Platform by clicking ",(0,n.jsx)(i.strong,{children:"Add"})," in the Additional Files section."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"Scan the folder used for the precompilation file output."}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},11151:(e,i,t)=>{t.d(i,{Z:()=>l,a:()=>r});var n=t(67294);const o={},s=n.createContext(o);function r(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);