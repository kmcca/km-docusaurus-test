"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[88538],{87179:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>o});var i=n(85893),c=n(11151);const s={title:"C/C++ scan directives",slug:"/r/C_C_Scan_Directives"},a=void 0,r={id:"guides/SCA/using_agent_based_scans/scan_directives_agent/c_cpp_scan_directives",title:"C/C++ scan directives",description:"makebuildtarget",source:"@site/docs/guides/07_SCA/04_using_agent_based_scans/10_scan_directives_agent/11_c_cpp_scan_directives.md",sourceDirName:"guides/07_SCA/04_using_agent_based_scans/10_scan_directives_agent",slug:"/r/C_C_Scan_Directives",permalink:"/km-docusaurus-test/r/C_C_Scan_Directives",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"C/C++ scan directives",slug:"/r/C_C_Scan_Directives"},sidebar:"tutorialSidebar",previous:{title:".NET scan directives",permalink:"/km-docusaurus-test/r/NET_Scan_Directives"},next:{title:"Automatic pull request scan directives",permalink:"/km-docusaurus-test/r/Automatic_Pull_Request_Scan_Directives"}},d={},o=[{value:"<code>make_build_target</code>",id:"make_build_target",level:2},{value:"<code>make_clean_target</code>",id:"make_clean_target",level:2},{value:"<code>make_output_file</code>",id:"make_output_file",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"make_build_target",children:(0,i.jsx)(t.code,{children:"make_build_target"})}),"\n",(0,i.jsxs)(t.p,{children:["This directive specifies the command-line arguments for the ",(0,i.jsx)(t.code,{children:"make"})," command that builds the project. By default, the ",(0,i.jsx)(t.code,{children:"make"})," command runs without any command-line arguments for building the project."]}),"\n",(0,i.jsx)(t.p,{children:"Example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"make_build_target: all\n"})}),"\n",(0,i.jsx)(t.h2,{id:"make_clean_target",children:(0,i.jsx)(t.code,{children:"make_clean_target"})}),"\n",(0,i.jsxs)(t.p,{children:["This directive specifies which command-line argument for cleaning the project to run with the ",(0,i.jsx)(t.code,{children:"make"})," command."]}),"\n",(0,i.jsxs)(t.p,{children:["Default value: ",(0,i.jsx)(t.code,{children:"clean"})]}),"\n",(0,i.jsx)(t.p,{children:"Example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"make_clean_target: distclean\n"})}),"\n",(0,i.jsx)(t.h2,{id:"make_output_file",children:(0,i.jsx)(t.code,{children:"make_output_file"})}),"\n",(0,i.jsxs)(t.p,{children:["This directive specifies the path, relative to the project root, to the text file that contains the output of the ",(0,i.jsx)(t.code,{children:"make"})," command. If you use this directive, the scan agent parses the text file to obtain information about dependencies instead of running the ",(0,i.jsx)(t.code,{children:"make"})," command to build the project."]}),"\n",(0,i.jsx)(t.p,{children:"Example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"make_output_file: make_log.txt\n"})})]})}function u(e={}){const{wrapper:t}={...(0,c.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>a});var i=n(67294);const c={},s=i.createContext(c);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);