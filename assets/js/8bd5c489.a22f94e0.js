"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[50113],{9219:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var t=i(85893),s=i(11151);const a={title:"About Pipeline Scan baseline files",slug:"/r/Using_a_Pipeline_Scan_Baseline_File"},l=void 0,o={id:"guides/integrations/cicd/pipeline_scan/getstarted_pipeline_scan/c_about_pipeline_baseline_file",title:"About Pipeline Scan baseline files",description:"The Pipeline Scan provides the ability to set a baseline of known security findings. It stores these findings in a JSON file called the baseline or baseline file. The Pipeline Scan can compare discovered findings against the baseline file to identify new findings.",source:"@site/docs/guides/04_integrations/03_cicd/09_pipeline_scan/01_getstarted_pipeline_scan/06_c_about_pipeline_baseline_file.md",sourceDirName:"guides/04_integrations/03_cicd/09_pipeline_scan/01_getstarted_pipeline_scan",slug:"/r/Using_a_Pipeline_Scan_Baseline_File",permalink:"/km-docusaurus-test/r/Using_a_Pipeline_Scan_Baseline_File",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"About Pipeline Scan baseline files",slug:"/r/Using_a_Pipeline_Scan_Baseline_File"},sidebar:"tutorialSidebar",previous:{title:"Run a Pipeline Scan in a pipeline",permalink:"/km-docusaurus-test/r/t_run_pipeline_scan"},next:{title:"Use policies with Pipeline Scans",permalink:"/km-docusaurus-test/r/Using_Policies_with_the_Pipeline_Scan"}},r={},c=[];function d(e){const n={a:"a",code:"code",p:"p",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"The Pipeline Scan provides the ability to set a baseline of known security findings. It stores these findings in a JSON file called the baseline or baseline file. The Pipeline Scan can compare discovered findings against the baseline file to identify new findings."}),"\n",(0,t.jsxs)(n.p,{children:['During scanning, the Pipeline Scan ignores the findings in a baseline file and only uses the file to identify new findings. For a CI/CD workflow, you can decide whether any new findings outside your baseline are important enough to "break the build". Then, your team can determine a ',(0,t.jsx)(n.a,{href:"/km-docusaurus-test/r/improve_main",children:"mitigation strategy"})," for addressing these findings before moving the code to the next phase in your development pipeline."]}),"\n",(0,t.jsxs)(n.p,{children:["By default, after each scan, the Pipeline Scan saves the scan results to a ",(0,t.jsx)(n.code,{children:"results.json"})," file. Because results.json is a standard JSON file, which you can safely rename, containing all the findings information from your scan results, you can set this file as the baseline for the scanned application."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, you can run the Pipeline Scan at the command line with the ",(0,t.jsx)(n.a,{href:"/km-docusaurus-test/r/r_pipeline_scan_commands",children:(0,t.jsx)(n.code,{children:"--baseline_file"})})," parameter and the name of your JSON file. The Pipeline Scan scans against that JSON file to report on any new findings."]})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>o,a:()=>l});var t=i(67294);const s={},a=t.createContext(s);function l(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);