"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[44373],{36610:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=n(85893),i=n(11151);const a={title:"Prevent SSL LUCKY13 attacks",slug:"/r/prevent-ssl-lucky13"},r=void 0,o={id:"guides/dynamic_analysis/dast_essentials/dast_essentials_tls_vulns/prevent-ssl-lucky13",title:"Prevent SSL LUCKY13 attacks",description:"The SSL LUCKY13 is a cryptographic timing attack that can be used against implementations of the TLS and DTLS protocols using the Cipher Block Chaining mode of operation. This can also be considered a type of man-in-the-middle attack.",source:"@site/docs/guides/08_dynamic_analysis/15_dast_essentials/08_dast_essentials_tls_vulns/09_prevent-ssl-lucky13.md",sourceDirName:"guides/08_dynamic_analysis/15_dast_essentials/08_dast_essentials_tls_vulns",slug:"/r/prevent-ssl-lucky13",permalink:"/km-docusaurus-test/r/prevent-ssl-lucky13",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Prevent SSL LUCKY13 attacks",slug:"/r/prevent-ssl-lucky13"},sidebar:"tutorialSidebar",previous:{title:"Renew TLS certificates",permalink:"/km-docusaurus-test/r/renew-tls-certificates"},next:{title:"Prevent SSL CRIME attacks",permalink:"/km-docusaurus-test/r/prevent-ssl-crime"}},c={},l=[{value:"Security assessment",id:"security-assessment",level:2},{value:"Vulnerability information",id:"vulnerability-information",level:2},{value:"Occurrence of LUCKY13 attacks",id:"occurrence-of-lucky13-attacks",level:2},{value:"Protect against SSL LUCKY13 attacks",id:"protect-against-ssl-lucky13-attacks",level:2},{value:"Prevent attacks",id:"prevent-attacks",level:2},{value:"Apache",id:"apache",level:3},{value:"Nginx",id:"nginx",level:3}];function d(e){const t={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"The SSL LUCKY13 is a cryptographic timing attack that can be used against implementations of the TLS and DTLS protocols using the Cipher Block Chaining mode of operation. This can also be considered a type of man-in-the-middle attack."}),"\n",(0,s.jsx)(t.h2,{id:"security-assessment",children:"Security assessment"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Security_Assessment_PreventSSLLUCKY13",src:n(53786).Z+"",width:"907",height:"332"})}),"\n",(0,s.jsxs)(t.p,{children:["CVSS vector: ",(0,s.jsxs)(t.a,{href:"https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator?name=CVE-2013-0169&vector=(AV:N/AC:H/Au:N/C:P/I:N/A:N)",children:["AV",":N","/AC",":H","/AU",":N","/C",":P","/I",":N","/A",":N"]})]}),"\n",(0,s.jsx)(t.h2,{id:"vulnerability-information",children:"Vulnerability information"}),"\n",(0,s.jsx)(t.p,{children:"The vulnerability that allows the SSL LUCKY 13 to be made is a flaw in the SSL/TLS specification rather than due to issues in specific implementations."}),"\n",(0,s.jsx)(t.p,{children:"The attack can be considered a more advanced type of padding oracle attack that exploits different calculation times depending on the plaintext being padded with one or two bytes or containing incorrect padding."}),"\n",(0,s.jsx)(t.p,{children:"Under OpenSSL, the attack allows a full plaintext recovery, whereas, for GnuTLS, a partial plaintext recovery attack can be conducted. In the latter case, an attacker can recover up to 4 bits of the last byte of plaintext blocks."}),"\n",(0,s.jsx)(t.p,{children:"As a result of a successful attack, an attacker exploiting this vulnerability can read the plaintext of a TLS encrypted session. This can result in the loss of sensitive information."}),"\n",(0,s.jsx)(t.h2,{id:"occurrence-of-lucky13-attacks",children:"Occurrence of LUCKY13 attacks"}),"\n",(0,s.jsx)(t.p,{children:"This attack relies on a difference in processing times between TLS messages with at least two bytes of correct padding and TLS messages with one byte of proper padding (or incorrectly formatted padding). Transport Layer Security messages with two bytes of padding are processed somewhat faster, and this difference can be detected when the arrival of TLS error messages is timed."}),"\n",(0,s.jsx)(t.p,{children:"To establish this difference, attack-generated ciphertexts are sent to the same place in the plaintext stream during several TLS sessions. This generates an error message in the network as a response."}),"\n",(0,s.jsx)(t.p,{children:"By repeatedly launching an attack and carefully analyzing the responses, these different padding conditions can be distinguished. Then, using the packet timing data, an attacker can execute a plaintext-recovery attack on the MAC check while processing a malformed CBC padding."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"SSL LUCKY13",src:n(44134).Z+"",width:"805",height:"455"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"http://www.isg.rhul.ac.uk/tls/TLStiming.pdf",children:"Timing Attack results in long (red) and short (blue) fake padding (AlFardan & Paterson, 2013)."})}),"\n",(0,s.jsx)(t.p,{children:"A LUCKY 13 attack requires about 223 TLS sessions to collect a whole block of TLS-encrypted plaintext in its most basic version. This can be reduced several times, and under the best circumstances, an attacker needs 2\xb9\xb3 TLS sessions to recover one plaintext byte. This is premised on the condition that the attacker is close to the target (i.e., in the same network as the webserver) to reduce noise and perform the timing attack. To generate the necessary TLS sessions, attackers have several options. As a result of the attacks, a running TLS session may be terminated. Applications that use this protocol may then attempt to reconnect and send cookies or authentication credentials."}),"\n",(0,s.jsxs)(t.p,{children:["Another way of generating sessions is through malware on the client-side. This is akin to a BEAST attack though it does not need to circumvent the same-origin policy because it is not a form of injection attack.",(0,s.jsx)(t.br,{}),"\n","In DTLS sessions, attacks can even be executed within a single session with the help of amplification techniques that make the timing signals more pronounced and easier to spot."]}),"\n",(0,s.jsx)(t.h2,{id:"protect-against-ssl-lucky13-attacks",children:"Protect against SSL LUCKY13 attacks"}),"\n",(0,s.jsx)(t.p,{children:"Apart from patches, several mitigation techniques exist that will allow you to protect yourself from this type of attack. These mitigation techniques were put forward by AlFardan & Paterson, who made this vulnerability known. They include:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Adding random time delays to the CBC-mode decryption process to frustrate statistical analysis is a possible countermeasure you can take. However, it is not particularly effective if implemented solely since attackers can overcome it by increasing the number of samples they take."}),"\n",(0,s.jsx)(t.li,{children:"Switching from a block cipher to an RC4 stream cipher avoids the need for plaintext padding (i.e., CBC-mode encryption) altogether. This cannot be implemented under Datagram Transport Layer Security (DTLS). Switching a stream cipher will eliminate the possibility of attacks as described above. RC4 cipher suites are widely supported in TLS implementations and successful against BEAST attacks. However, RC4 has specific cryptographic weaknesses when used in TLS that must be accounted for. RC4, when used in TLS, contains single-byte biases which are not discarded before the encryption. This allows for remote attacks to be conducted, such as the Bar-mitzvah attack. For this reason, switching to RC4 is only a temporary fix for the LUCKY 13 vulnerability."}),"\n",(0,s.jsx)(t.li,{children:"Switching from MEE-TLS-CBC to AEAD cipher suites, i.e., dedicated encryption algorithms, such as AES-GCM, is also possible for eliminating the possibility of a LUCKY 13 attack. However, this does not rule out the chance for errors during implementation, nor the potential for using side-channels. TLS 1.2 client and server implementations added support for these cipher suites."}),"\n",(0,s.jsx)(t.li,{children:"Modifying the CBC-mode decryption procedure is the final mitigation strategy proposed by AlFardan & Paterson. Its intended purpose is to remove the timing side-channel by ensuring a uniform processing time for all ciphertexts under this mode. In other words, the processing time must only be related to the size of the ciphertext and not to the plaintext (and its padding). This is achieved by ensuring that the MAC processing amount does not differ regardless of what the underlying plaintext indicates as the message length. However, this approach requires great care and attention and will likely present a challenge. For this reason, the most viable long-term mitigation strategy for avoiding SSL LUCKY 13 attacks is to avoid using TLS in CBC-mode and implement the use of AEAD cipher suites."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"prevent-attacks",children:"Prevent attacks"}),"\n",(0,s.jsx)(t.p,{children:"In addition to the above countermeasures, you can prevent the LUCKY13 attack using the following Transport Layer Security configuration in Apache and Nginx."}),"\n",(0,s.jsx)(t.h3,{id:"apache",children:"Apache"}),"\n",(0,s.jsxs)(t.p,{children:["With apache, the SSL/TLS configuration is stored in ",(0,s.jsx)(t.code,{children:"/etc/apache2/mods-enabled/ssl.conf"}),". If you use Let's Encrypt, the configuration may reside in ",(0,s.jsx)(t.code,{children:"/etc/letsencrypt/options-ssl-apache.conf"}),". To enable only ciphers with high encryption and current protocols set:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"SSLProtocol             all -SSLv3 -TLSv1 -TLSv1.1  \nSSLCipherSuite          ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256  \nSSLHonorCipherOrder     on  \nSSLCompression          off\n"})}),"\n",(0,s.jsx)(t.p,{children:"Then reload the Apache server configuration."}),"\n",(0,s.jsx)(t.p,{children:"Note that this limits the cipher suites and protocol versions to recent SSL/TLS versions, which might exclude users with older browsers."}),"\n",(0,s.jsx)(t.h3,{id:"nginx",children:"Nginx"}),"\n",(0,s.jsxs)(t.p,{children:["For Nginx, update the configuration file which is usually located at ",(0,s.jsx)(t.code,{children:"/etc/nginx/nginx.conf,/etc/nginx/sited-enabled/yoursite.com"})," (Ubuntu/Debian) or ",(0,s.jsx)(t.code,{children:"/etc/nginx/conf.d/nginx.conf"})," (RHEL/CentOS). Add the following directive to the ",(0,s.jsx)(t.code,{children:"server"})," section:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"ssl_protocols TLSv1.2;  \nssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';  \nssl_prefer_server_ciphers on; \n"})}),"\n",(0,s.jsx)(t.p,{children:"Then restart the Nginx server."}),"\n",(0,s.jsx)(t.p,{children:"Note that this limits the cipher suites and protocol versions to recent SSL/TLS versions, which might exclude users with older browsers."})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},44134:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/SSL LUCKY13-30f65f20340ba3647fda8005c052197b.png"},53786:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/Security_Assessment_PreventSSLLUCKY13-04bfecd25678979b8a924d88ff25d840.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>r});var s=n(67294);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);