"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[35089],{10770:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var s=r(85893),n=r(11151);const i={title:"Flaw Report XML API quick reference",slug:"/r/Flaw_Report_XML_APIs_Quick_Reference"},o=void 0,a={id:"guides/apis/xml_apis/flaw_report_xml_apis/flaw_report_xml_apis_quickref",title:"Flaw Report XML API quick reference",description:"This table lists the XML API calls for managing flaw reports. For more detailed information, see the topic for a specific call.",source:"@site/docs/guides/14_apis/05_xml_apis/07_flaw_report_xml_apis/01_flaw_report_xml_apis_quickref.md",sourceDirName:"guides/14_apis/05_xml_apis/07_flaw_report_xml_apis",slug:"/r/Flaw_Report_XML_APIs_Quick_Reference",permalink:"/km-docusaurus-test/r/Flaw_Report_XML_APIs_Quick_Reference",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Flaw Report XML API quick reference",slug:"/r/Flaw_Report_XML_APIs_Quick_Reference"},sidebar:"tutorialSidebar",previous:{title:"Flaw Report XML API",permalink:"/km-docusaurus-test/r/c_about_flawreport"},next:{title:"generateflawreport.do",permalink:"/km-docusaurus-test/r/r_generateflawreport"}},l={},c=[];function d(e){const t={a:"a",code:"code",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"This table lists the XML API calls for managing flaw reports. For more detailed information, see the topic for a specific call."}),"\n",(0,s.jsx)(t.p,{children:"Veracode strongly recommends that you use the REST APIs. For new integrations, always use the REST APIs."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"XML API Call"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Optional XML API Parameters"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/km-docusaurus-test/r/r_generateflawreport",children:(0,s.jsx)(t.code,{children:"generateflawreport.do"})})}),(0,s.jsxs)(t.td,{children:["Returns ",(0,s.jsx)(t.code,{children:"generateflawreport.xml"}),", which contains the token you need for downloading the finding report."]}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"token"}),(0,s.jsx)("br",{}),(0,s.jsx)(t.code,{children:"scan_type"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/km-docusaurus-test/r/r_downloadflawreport",children:(0,s.jsx)(t.code,{children:"downloadflawreport.do"})})}),(0,s.jsx)(t.td,{children:"Returns an XML report that lists all fixed and unfixed findings for the specified applications and/or scan type."}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"app_id_list"}),(0,s.jsx)("br",{}),(0,s.jsx)(t.code,{children:"scan_type"})]})]})]})]})]})}function p(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,t,r)=>{r.d(t,{Z:()=>a,a:()=>o});var s=r(67294);const n={},i=s.createContext(n);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);