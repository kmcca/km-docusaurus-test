"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[40719],{90136:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var n=t(85893),i=t(11151);const r={title:"List users with the REST API",slug:"/r/c_identity_list_users"},a=void 0,o={id:"guides/apis/rest_apis/identity_rest_api/identity_api_list_users",title:"List users with the REST API",description:"This use case scenario provides the Identity REST API requests for listing users. These requests apply to both user accounts and API service accounts.",source:"@site/docs/guides/14_apis/04_rest_apis/11_identity_rest_api/04_identity_api_list_users.md",sourceDirName:"guides/14_apis/04_rest_apis/11_identity_rest_api",slug:"/r/c_identity_list_users",permalink:"/km-docusaurus-test/r/c_identity_list_users",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"List users with the REST API",slug:"/r/c_identity_list_users"},sidebar:"tutorialSidebar",previous:{title:"List all roles in an organization with the REST API",permalink:"/km-docusaurus-test/r/Listing_All_Roles_in_an_Organization_with_the_Identity_API"},next:{title:"Search for users with the REST API",permalink:"/km-docusaurus-test/r/c_identity_search_users"}},c={},u=[];function d(e){const s={a:"a",code:"code",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["This use case scenario provides the Identity REST API requests for listing users. These requests apply to both ",(0,n.jsx)(s.a,{href:"/km-docusaurus-test/r/c_about_veracode_accounts",children:"user accounts and API service accounts"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"Send the following request to list all users:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:'http --auth-type=veracode_hmac GET "https://api.veracode.com/api/authn/v2/users"\n'})}),"\n",(0,n.jsxs)(s.p,{children:["By default, the output results show up to 20 users per page. To page through the list, you can resend the request with ",(0,n.jsx)(s.code,{children:"?page=1"}),", ",(0,n.jsx)(s.code,{children:"?page=2"}),", and so on, appended to the end."]}),"\n",(0,n.jsxs)(s.p,{children:["Send the following request to increase the page size from the maximum of ",(0,n.jsx)(s.code,{children:"20"})," and list more users in the output ",(0,n.jsx)(s.strong,{children:"Results:"})]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:'http --auth-type=veracode_hmac GET "https://api.veracode.com/api/authn/v2/users?page={page number}&size={page size}"\n'})}),"\n",(0,n.jsxs)(s.p,{children:["For example, set ",(0,n.jsx)(s.code,{children:"page=0&size=50"})," to increase the size of page ",(0,n.jsx)(s.code,{children:"0"})," to ",(0,n.jsx)(s.code,{children:"50"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"Send the following request to list only users whose accounts are enabled:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:'http --auth-type=veracode_hmac GET "https://api.veracode.com/api/authn/v2/users?enabled=true"\n'})}),"\n",(0,n.jsxs)(s.p,{children:["You can set ",(0,n.jsx)(s.code,{children:"enabled=false"})," to list only users whose accounts are disabled."]})]})}function l(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},11151:(e,s,t)=>{t.d(s,{Z:()=>o,a:()=>a});var n=t(67294);const i={},r=n.createContext(i);function a(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);