"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[70733],{56313:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>l,frontMatter:()=>c,metadata:()=>r,toc:()=>i});var a=s(85893),n=s(11151);const c={title:"About Veracode accounts",slug:"/r/c_about_veracode_accounts"},o=void 0,r={id:"guides/admin/managing_users/about_veracode_accounts",title:"About Veracode accounts",description:"Veracode provides two account types: a user account, for real human users, and an API service account, for non-human users.",source:"@site/docs/guides/12_admin/02_managing_users/01_about_veracode_accounts.md",sourceDirName:"guides/12_admin/02_managing_users",slug:"/r/c_about_veracode_accounts",permalink:"/km-docusaurus-test/r/c_about_veracode_accounts",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"About Veracode accounts",slug:"/r/c_about_veracode_accounts"},sidebar:"tutorialSidebar",previous:{title:"Managing users",permalink:"/km-docusaurus-test/r/admin_user"},next:{title:"Administering your Veracode account",permalink:"/km-docusaurus-test/r/admin_main"}},u={},i=[{value:"User account",id:"user-account",level:2},{value:"API service account",id:"api-service-account",level:2}];function d(e){const t={a:"a",h2:"h2",p:"p",...(0,n.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Veracode provides two account types: a user account, for real human users, and an API service account, for non-human users."}),"\n",(0,a.jsx)(t.h2,{id:"user-account",children:"User account"}),"\n",(0,a.jsxs)(t.p,{children:["A user account can access the Veracode Platform and the Veracode APIs. Account permissions are based on the ",(0,a.jsx)(t.a,{href:"/km-docusaurus-test/r/c_role_permissions",children:"user roles"})," or ",(0,a.jsx)(t.a,{href:"/km-docusaurus-test/r/c_API_roles_details",children:"API roles"})," assigned to the account."]}),"\n",(0,a.jsx)(t.h2,{id:"api-service-account",children:"API service account"}),"\n",(0,a.jsxs)(t.p,{children:["An API service account, or API user, is for non-human users, such as systems or services, that access the Veracode APIs. Veracode recommends that you use this account for automation. For example, you could use this account with the APIs to automate an application analysis that runs unattended and without disruption if you disable the account or it expires. Account permissions are based on the ",(0,a.jsx)(t.a,{href:"/km-docusaurus-test/r/c_API_roles_details",children:"API roles"})," you assign to the account."]}),"\n",(0,a.jsxs)(t.p,{children:["You can create and manage both account types in the ",(0,a.jsx)(t.a,{href:"/km-docusaurus-test/r/t_manage_user",children:"Veracode Platform"})," and with the ",(0,a.jsx)(t.a,{href:"/km-docusaurus-test/r/c_identity_intro",children:"Identity API"}),"."]})]})}function l(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>r,a:()=>o});var a=s(67294);const n={},c=a.createContext(n);function o(e){const t=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),a.createElement(c.Provider,{value:t},e.children)}}}]);