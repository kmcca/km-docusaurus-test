"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[27945],{6484:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var t=s(85893),i=s(11151);const o={title:"Objective-C SCA agent-based scanning",slug:"/r/c_sc_objc"},a=void 0,r={id:"guides/SCA/using_agent_based_scans/finding_and_fixing_vulnerabilities/objc_sca_agent",title:"Objective-C SCA agent-based scanning",description:"You can find vulnerabilities in your Objective-C applications using Veracode Software Composition Analysis agent-based scanning. You can run a scan on Objective-C repositories using the agent-based scanning command-line interface or the CI integrations.",source:"@site/docs/guides/07_SCA/04_using_agent_based_scans/19_finding_and_fixing_vulnerabilities/10_objc_sca_agent.md",sourceDirName:"guides/07_SCA/04_using_agent_based_scans/19_finding_and_fixing_vulnerabilities",slug:"/r/c_sc_objc",permalink:"/km-docusaurus-test/r/c_sc_objc",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Objective-C SCA agent-based scanning",slug:"/r/c_sc_objc"},sidebar:"tutorialSidebar",previous:{title:"Kotlin SCA agent-based scanning",permalink:"/km-docusaurus-test/r/c_sca_kotlin"},next:{title:"Swift SCA agent-based scanning",permalink:"/km-docusaurus-test/r/c_sc_swift"}},c={},d=[];function l(e){const n={a:"a",admonition:"admonition",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["You can find vulnerabilities in your Objective-C applications using Veracode Software Composition Analysis agent-based scanning. You can run a scan on Objective-C repositories using the ",(0,t.jsx)(n.a,{href:"/km-docusaurus-test/r/Using_the_Veracode_SCA_Command_Line_Agent",children:"agent-based scanning command-line interface"})," or the ",(0,t.jsx)(n.a,{href:"/km-docusaurus-test/r/Integrate_Veracode_SCA_Agent_Based_Scanning_with_Your_CI_Projects",children:"CI integrations"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Veracode SCA agent-based scanning supports scanning Objective-C repositories managed with CocoaPods. It does not support other package managers."}),"\n",(0,t.jsxs)(n.p,{children:["For packaging instructions for Veracode Static Analysis and Veracode SCA upload scans, see ",(0,t.jsx)(n.a,{href:"/km-docusaurus-test/r/compilation_ios",children:"Packaging iOS and tvOS applications"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["You can use agent-based scanning to scan any code repository to which you have access and fulfills the above requirements. To run an example scan, you can clone one of the public Veracode SCA ",(0,t.jsx)(n.a,{href:"https://github.com/veracode/example-objc-cocoapods",children:"repositories"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"git clone https://github.com/veracode/example-objc-cocoapods\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Before you begin:"})}),"\n",(0,t.jsx)(n.p,{children:"Scanning a repository that uses Objective-C and the CocoaPods package manager requires you to assemble the project dependencies within the environment in which you scan the project. Your environment must:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Meet the ",(0,t.jsx)(n.a,{href:"/km-docusaurus-test/r/Setting_Up_Agent_Based_Scans",children:"requirements for the Veracode SCA agent"})]}),"\n",(0,t.jsx)(n.li,{children:"Have access to the Objective-C repository"}),"\n",(0,t.jsxs)(n.li,{children:["Have a ",(0,t.jsx)(n.code,{children:"podfile.lock"})," file present in the Objective-C repository","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If ",(0,t.jsx)(n.code,{children:"podfile.lock"})," does not exist in the project root where you perform scans, you must be able to run the ",(0,t.jsx)(n.code,{children:"pod install"})," command from the project root."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"To complete this task:"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Run the scan command with the ",(0,t.jsx)(n.a,{href:"/km-docusaurus-test/r/Using_the_Veracode_SCA_Command_Line_Agent",children:"Veracode SCA CLI agent"})," pointed to the directory of the Objective-C repository. For example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"srcclr scan path/to/{project_folder}\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["To scan code repositories hosted in Git, use the ",(0,t.jsx)(n.code,{children:"--url"})," argument ",(0,t.jsx)(n.a,{href:"/km-docusaurus-test/r/Veracode_SCA_Agent_Commands",children:"with the CLI agent"}),"."]})}),"\n",(0,t.jsxs)(n.p,{children:["To view more verbose output during the scan process, you can add the ",(0,t.jsx)(n.code,{children:"--loud"})," argument:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"srcclr scan path/to/{project_folder} --loud\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Results:"})}),"\n",(0,t.jsx)(n.p,{children:"The Veracode SCA agent uses the native package managers to identify the dependencies and their versions in your project. When the agent evaluates the open-source libraries in use, it produces a summary of the scan results. This summary includes counts for total libraries used, vulnerable libraries, percentage of third-party code, and a list of the vulnerabilities found."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Next steps:"})}),"\n",(0,t.jsxs)(n.p,{children:["After completing the scan, you can ",(0,t.jsx)(n.a,{href:"/km-docusaurus-test/r/Viewing_Agent_Based_Scan_Results",children:"view the results"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>r,a:()=>a});var t=s(67294);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);