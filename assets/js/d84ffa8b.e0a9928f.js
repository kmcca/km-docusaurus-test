"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[35122],{25534:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var i=t(85893),a=t(11151);const s={title:"DAST Essentials authentication methods",slug:"/r/advanced-authentication-flows"},o=void 0,r={id:"guides/dynamic_analysis/dast_essentials/dast_essentials_config/dast_essentials_auth_methods",title:"DAST Essentials authentication methods",description:"Many web applications rely on some login mechanism to authenticate users. A full security scan of the application is usually only valid if you scan the whole application, including all internal areas. This section explains the different authentication methods, such as HTTP basic authentication, parameter-based authentication, OAuth 2, and SAML, to enable a scan of the entire web application.",source:"@site/docs/guides/08_dynamic_analysis/15_dast_essentials/04_dast_essentials_config/03_dast_essentials_auth_methods.md",sourceDirName:"guides/08_dynamic_analysis/15_dast_essentials/04_dast_essentials_config",slug:"/r/advanced-authentication-flows",permalink:"/km-docusaurus-test/r/advanced-authentication-flows",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"DAST Essentials authentication methods",slug:"/r/advanced-authentication-flows"},sidebar:"tutorialSidebar",previous:{title:"About the DAST Essentials scanners",permalink:"/km-docusaurus-test/r/current-scanner-overview"},next:{title:"DAST Essentials integrations",permalink:"/km-docusaurus-test/r/crashtest-security-integrations"}},l={},c=[{value:"Simple authentication methods",id:"simple-authentication-methods",level:2},{value:"HTTP basic authentication",id:"http-basic-authentication",level:3},{value:"Form-based authentication / Standard login form",id:"form-based-authentication--standard-login-form",level:3},{value:"Authentication use cases",id:"authentication-use-cases",level:2},{value:"Modal / Pop-up log-in",id:"modal--pop-up-log-in",level:3},{value:"Log-in form is present on the main site",id:"log-in-form-is-present-on-the-main-site",level:3},{value:"Cookie banners",id:"cookie-banners",level:3},{value:"Additional input fields that are required for a login",id:"additional-input-fields-that-are-required-for-a-login",level:3},{value:"2-Factor authentication",id:"2-factor-authentication",level:3},{value:"Dynamically changing URLs",id:"dynamically-changing-urls",level:3},{value:"Parameter authentication",id:"parameter-authentication",level:2},{value:"Configure parameter authentication",id:"configure-parameter-authentication",level:3},{value:"Advanced authentication methods",id:"advanced-authentication-methods",level:2},{value:"SAML",id:"saml",level:3},{value:"OAuth 2",id:"oauth-2",level:3}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Many web applications rely on some login mechanism to authenticate users. A full security scan of the application is usually only valid if you scan the whole application, including all internal areas. This section explains the different authentication methods, such as HTTP basic authentication, parameter-based authentication, OAuth 2, and SAML, to enable a scan of the entire web application."}),"\n",(0,i.jsx)(n.p,{children:"This page provides guidance on setting up an API for scans."}),"\n",(0,i.jsx)(n.h2,{id:"simple-authentication-methods",children:"Simple authentication methods"}),"\n",(0,i.jsx)(n.p,{children:"DAST Essentials includes the following simple authentication methods."}),"\n",(0,i.jsx)(n.h3,{id:"http-basic-authentication",children:"HTTP basic authentication"}),"\n",(0,i.jsxs)(n.p,{children:["HTTP basic authentication, which is also known as ",(0,i.jsx)(n.code,{children:".htaccess"})," protection, is an authentication method where an authorization header with a base64 encoded username and password is sent to the server."]}),"\n",(0,i.jsx)(n.p,{children:"If an HTTP basic authentication protects your web application, use the global authentication setting in your scan target to configure the authentication by adding a username and password valid for your .htaccess form."}),"\n",(0,i.jsx)(n.h3,{id:"form-based-authentication--standard-login-form",children:"Form-based authentication / Standard login form"}),"\n",(0,i.jsx)(n.p,{children:"If your application uses a standard HTML-based login form, you can use the application authentication table to create a working login for your application. To configure this correctly, you have to follow three simple steps:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Enter the login URL in the Login URL field. The URL should ideally only contain the login form and should be a separate URL; if this is not the case, see the edge cases at the end of this chapter."}),"\n",(0,i.jsxs)(n.li,{children:["Select ",(0,i.jsx)(n.strong,{children:"Create Profile"})," and create a new authentication profile."]}),"\n",(0,i.jsx)(n.li,{children:"Select on the newly created profile on the left. You might have to do a refresh."}),"\n",(0,i.jsx)(n.li,{children:"Enter the username and password valid for the application."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"authentication-use-cases",children:"Authentication use cases"}),"\n",(0,i.jsxs)(n.p,{children:["A collection of edge cases we have previously encountered to make it easier for you to configure the scans. For assistance, contact ",(0,i.jsx)(n.a,{href:"mailto:support@veracode.com",children:"Veracode Technical Support"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"modal--pop-up-log-in",children:"Modal / Pop-up log-in"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ideally, a specific subpage, such as ",(0,i.jsx)(n.code,{children:"www.example.com/login"}),", contains the login form, or you can make one available. Then, the crawler can more easily log in."]}),"\n",(0,i.jsx)(n.li,{children:"If this is not the case, you can run a test, selecting the URL to select the button to open the login. In some cases, the crawler identifies the login correctly, and an authenticated scan can be conducted."}),"\n",(0,i.jsx)(n.li,{children:"In case this is not possible, see parameter authentication"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"log-in-form-is-present-on-the-main-site",children:"Log-in form is present on the main site"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Configure the main page as a login URL and start the scan."}),"\n",(0,i.jsx)(n.li,{children:"If the login occurs in a modal, see the steps mentioned here"}),"\n",(0,i.jsx)(n.li,{children:"In case this is not possible, see parameter authentication"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cookie-banners",children:"Cookie banners"}),"\n",(0,i.jsx)(n.p,{children:"If you use a Consent Management Tool like Cookiebot on the application to be tested, either:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Disable the Consent Management Tool for the time the scan is running"}),"\n",(0,i.jsx)(n.li,{children:"Configure a token in the Global parameter authentication settings that disable the CMT from the pop-up (e.g., consent_cookie=1)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"additional-input-fields-that-are-required-for-a-login",children:"Additional input fields that are required for a login"}),"\n",(0,i.jsx)(n.p,{children:"The crawler can detect additional input fields on the login form as follows:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Checkboxes (e.g., Agreement to T&C) will be checked if they are configured as checkboxes in the code"}),"\n",(0,i.jsx)(n.li,{children:"Drop-Down Menus: The Crawler will always select the first choice in a drop-down menu; ensure that the Credentials provided match the selection"}),"\n",(0,i.jsx)(n.li,{children:"Free-text fields: Ensure that these are prefilled with correct values when visiting the site. If they are not, the crawler will not fill in any matter, and the login might not be successful. In this case, see parameter authentication"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-factor-authentication",children:"2-Factor authentication"}),"\n",(0,i.jsx)(n.p,{children:"If your web application uses some 2-factor authentication (e.g., SMS, authenticator app, etc.), DAST Essentials does not perform a login with a second factor. To still use the scanner successfully, you can use the following options:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Create a profile with users that do not have 2FA enabled and configure the login accordingly."}),"\n",(0,i.jsx)(n.li,{children:"Disable the 2FA on the test/staging environment or a dedicated pentesting system."}),"\n",(0,i.jsx)(n.li,{children:"For some cases (e.g., token-based authentication), there is potentially a way to bypass the 2FA. For assistance, please contact Veracode Technical Support."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"dynamically-changing-urls",children:"Dynamically changing URLs"}),"\n",(0,i.jsx)(n.p,{children:"In case your web application creates a dynamic login URL every time a user attempts a login, there are the following options for you to configure the login:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Create a page that automatically directs the user to the newly created login site; configure this in the login URL. The scanner follows the redirect and log in with the provided credentials on"}),"\n",(0,i.jsx)(n.li,{children:"Create a static login page"}),"\n",(0,i.jsx)(n.li,{children:"See parameter authentication"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"parameter-authentication",children:"Parameter authentication"}),"\n",(0,i.jsx)(n.p,{children:"This setting allows you to configure a more advanced authentication and should be used if the form-based authentication does not work. There are three main types of configuration:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"HTTP Header: If you configure an HTTP header, the header will be sent with each request used for scanning the web application."}),"\n",(0,i.jsx)(n.li,{children:"GET parameter: If you configure a GET parameter, the parameter will be added to each request as GET parameter when scanning the web application."}),"\n",(0,i.jsx)(n.li,{children:"(Session) Cookies: If you configure a cookie, the cookie will be sent with each request used for scanning the web application."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Important points for parameter authentication:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ensure that the lifetime for tokens/cookies is long enough for the scan to run through entirely (at least 24hrs)"}),"\n",(0,i.jsxs)(n.li,{children:["For Javascript-based applications: Ensure you configure all additional information your application uses to verify authenticated users. This can include","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Session storage"}),"\n",(0,i.jsx)(n.li,{children:"Local storage"}),"\n",(0,i.jsx)(n.li,{children:"Custom Cookies / Tokens"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Depending on your setup, you can configure parameter authentication on a global or per-user profile level. However, do not configure it in the global and user settings, leading to conflicting results."}),"\n",(0,i.jsx)(n.li,{children:"DAST Essentials does not support cookies/tokens/headers to be renewed during the scan. However, they can be generated automatically before every scan (see the next chapter)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"configure-parameter-authentication",children:"Configure parameter authentication"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"You choose the parameter type (for an explanation, see above)."}),"\n",(0,i.jsx)(n.li,{children:"You can give the parameter a title/identifier so other users in your team understand its meaning."}),"\n",(0,i.jsx)(n.li,{children:'Parameter Key: configure the exact key/phrase authentication for your application. For example, this could be "Authorization," "Authentication," or your customer identifier.'}),"\n",(0,i.jsxs)(n.li,{children:["Parameter Value: configure the exact value used by your application for the authentication.","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["An authorization header should usually contain ",(0,i.jsx)(n.code,{children:"Bearer"})," (unique Identifier)."]}),"\n",(0,i.jsx)(n.li,{children:"A cookie should usually contain the attributed session ID."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"advanced-authentication-methods",children:"Advanced authentication methods"}),"\n",(0,i.jsx)(n.p,{children:"You need to implement the login using a custom script to retrieve the authentication information for the advanced authentication methods, such as a session ID stored in a cookie or a JWT token."}),"\n",(0,i.jsx)(n.h3,{id:"saml",children:"SAML"}),"\n",(0,i.jsx)(n.p,{children:"SAML (Security Assertion Markup Language) is an XML framework for exchanging authentication and authorization information. When using a SAML workflow, you need a script (CLIENT) to log in using your identity provider (IDP) and generate a session with the application that shall be scanned, the service provider (SP), and the handover of the credentials to DAST Essentials."}),"\n",(0,i.jsx)(n.p,{children:"When writing your login script, complete the following steps:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"The CLIENT visits the IDP login page for the SP."}),"\n",(0,i.jsx)(n.li,{children:"The CLIENT provides credentials to the IDP."}),"\n",(0,i.jsx)(n.li,{children:"IDP generates the SAML response and sends it to the CLIENT."}),"\n",(0,i.jsx)(n.li,{children:"CLIENT posts the SAML response message to the SP."}),"\n",(0,i.jsx)(n.li,{children:"SP authenticates the user based on the assertion and provides session information (e.g., session cookie)"}),"\n",(0,i.jsx)(n.li,{children:"CLIENT sends a request to DAST Essentials to start a security scan, including the session information"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To send the information to DAST Essentials (step 6), you can ",(0,i.jsx)(n.a,{href:"/km-docusaurus-test/r/using-webhooks",children:"use webhooks"}),". You can also set the session manually for a target."]}),"\n",(0,i.jsx)(n.h3,{id:"oauth-2",children:"OAuth 2"}),"\n",(0,i.jsxs)(n.p,{children:["OAuth 2 (Open Authorization) is a protocol that offers a secure and standardized API authentication. With an OAuth 2.0 workflow, a client gets an access token from an authorization server (AS) used to authenticate with the software that shall be scanned. For OAuth 2, several different authentication flows can be used. A simple one is the ",(0,i.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc6749#section-4.3",children:"Resource Owner Password Credentials Grant"})," flow. Create a login script (CLIENT) that does the following:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"CLIENT sends a request to the AS to generate an access token."}),"\n",(0,i.jsx)(n.li,{children:"AS sends an access token to the CLIENT."}),"\n",(0,i.jsx)(n.li,{children:"CLIENT sends a request to DAST Essentials to start a security scan, including the access token."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To send the information to DAST Essentials (step 6), see ",(0,i.jsx)(n.a,{href:"/km-docusaurus-test/r/using-webhooks",children:"use webhooks"}),". You can also set the session manually for a target."]}),"\n",(0,i.jsxs)(n.p,{children:["If you have any questions about SSO authentication, contact ",(0,i.jsx)(n.a,{href:"mailto:support@veracode.com",children:"Veracode Technical Support"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>o});var i=t(67294);const a={},s=i.createContext(a);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);