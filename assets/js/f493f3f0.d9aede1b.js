"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[29003],{35222:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=n(85893),s=n(11151);const r={title:"Greenlight best practices",slug:"/r/c_best_practices"},c=void 0,o={id:"guides/integrations/ides/greenlight/greenlight_best_practices",title:"Greenlight best practices",description:"The Best Practices feature in Greenlight detects lines of code that comply with coding best practices. These lines of code protect the application against specific Common Weakness Enumerations (CWEs).",source:"@site/docs/guides/04_integrations/02_ides/01_greenlight/02_greenlight_best_practices.md",sourceDirName:"guides/04_integrations/02_ides/01_greenlight",slug:"/r/c_best_practices",permalink:"/km-docusaurus-test/r/c_best_practices",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Greenlight best practices",slug:"/r/c_best_practices"},sidebar:"tutorialSidebar",previous:{title:"Greenlight plugins",permalink:"/km-docusaurus-test/r/Veracode_Greenlight"},next:{title:"Greenlight prerequisites",permalink:"/km-docusaurus-test/r/Meet_Veracode_Greenlight_Prerequisites"}},a={},l=[];function d(e){const t={li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"The Best Practices feature in Greenlight detects lines of code that comply with coding best practices. These lines of code protect the application against specific Common Weakness Enumerations (CWEs)."}),"\n",(0,i.jsxs)(t.p,{children:["After you run a Greenlight scan in your IDE, the coding best practices are underlined green. In the Greenlight Findings window, select ",(0,i.jsx)(t.strong,{children:"Best Practices"})," to view a list of CWEs that your application avoided based on the detected coding best practices. To view more details about a specific CWE, in the Actions column, select ",(0,i.jsx)(t.strong,{children:"Details"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"For example, Greenlight can detect when a coding best practice is present against these CWEs:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Taint-based CWEs","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)"}),"\n",(0,i.jsx)(t.li,{children:"CWE-93: Improper Neutralization of CRLF Sequences (CRLF Injection)"}),"\n",(0,i.jsx)(t.li,{children:"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers (HTTP Response Splitting)"}),"\n",(0,i.jsx)(t.li,{children:"CWE-117: Improper Output Neutralization for Logs"}),"\n",(0,i.jsx)(t.li,{children:"CWE-201: Information Exposure Through Sent Data"}),"\n",(0,i.jsx)(t.li,{children:"CWE-611: Improper Restriction of XML External Entity Reference (XXE)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["Non-taint based CWEs","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"CWE-326: Inadequate Encryption Strength"}),"\n",(0,i.jsx)(t.li,{children:"CWE-327: Use of a Broken or Risky Cryptographic Algorithm"}),"\n",(0,i.jsx)(t.li,{children:"CWE-329: Not Using a Random IV with CBC Mode"}),"\n",(0,i.jsx)(t.li,{children:"CWE-331: Insufficient Entropy"}),"\n",(0,i.jsx)(t.li,{children:"CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)"}),"\n",(0,i.jsx)(t.li,{children:"CWE-780: Use of RSA Algorithm without OAEP"}),"\n"]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>c});var i=n(67294);const s={},r=i.createContext(s);function c(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);