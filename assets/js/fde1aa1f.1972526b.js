"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3980],{12628:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var a=i(85893),t=i(11151);const s={title:"Pipeline Scan example for an ASP.NET application in Azure DevOps",slug:"/r/Pipeline_Scan_Example_for_an_ASPNET_Application_in_Azure_DevOps"},r=void 0,l={id:"guides/integrations/cicd/pipeline_scan/pipeline_scan_azure_examples/r_azure_pipeline_yaml_example_dotnet",title:"Pipeline Scan example for an ASP.NET application in Azure DevOps",description:"This example YAML code shows how to add a Pipeline Scan as a build stage in an Azure DevOps build pipeline for an ASP.NET application on Windows.",source:"@site/docs/guides/04_integrations/03_cicd/09_pipeline_scan/06_pipeline_scan_azure_examples/01_r_azure_pipeline_yaml_example_dotnet.md",sourceDirName:"guides/04_integrations/03_cicd/09_pipeline_scan/06_pipeline_scan_azure_examples",slug:"/r/Pipeline_Scan_Example_for_an_ASPNET_Application_in_Azure_DevOps",permalink:"/km-docusaurus-test/r/Pipeline_Scan_Example_for_an_ASPNET_Application_in_Azure_DevOps",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Pipeline Scan example for an ASP.NET application in Azure DevOps",slug:"/r/Pipeline_Scan_Example_for_an_ASPNET_Application_in_Azure_DevOps"},sidebar:"tutorialSidebar",previous:{title:"Azure DevOps Pipeline Scan examples",permalink:"/km-docusaurus-test/r/Azure_DevOps_Pipeline_Scan_Examples"},next:{title:"Pipeline Scan example for using Gradle with Azure DevOps",permalink:"/km-docusaurus-test/r/Pipeline_Scan_Example_for_Using_Gradle_with_Azure_DevOps"}},o={},p=[];function c(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"This example YAML code shows how to add a Pipeline Scan as a build stage in an Azure DevOps build pipeline for an ASP.NET application on Windows."}),"\n",(0,a.jsxs)(n.p,{children:["The example includes a script that downloads and unzips ",(0,a.jsx)(n.code,{children:"pipeline-scan-LATEST.zip"}),", to ensure you have the latest version, then runs ",(0,a.jsx)(n.code,{children:"pipeline-scan.jar"})," using your ",(0,a.jsx)(n.a,{href:"/km-docusaurus-test/r/c_api_credentials3",children:"API credentials"}),". For improved stability, Veracode recommends that you change the script to use the ",(0,a.jsx)(n.a,{href:"https://hub.docker.com/r/veracode/pipeline-scan",children:"Pipeline Scan Docker image"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'trigger:\n  - main\n\npool:\n  vmImage: "windows-latest"\n\nvariables:\n  solution: "**/*.sln"\n  buildPlatform: "Any CPU"\n  buildConfiguration: "Release"\n\nsteps:\n  - task: NuGetToolInstaller@1\n\n  - task: NuGetCommand@2\n    inputs:\n      restoreSolution: "$(solution)"\n\n  - task: VSBuild@1\n    inputs:\n      solution: "$(solution)"\n      msbuildArgs: \'/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"\'\n      platform: "$(buildPlatform)"\n      configuration: "$(buildConfiguration)"\n\n  - task: CmdLine@2\n    displayName: Veracode Pipeline Scan\n    inputs:\n      script: |\n        curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip\n        unzip -o pipeline-scan-LATEST.zip\n        java -jar pipeline-scan.jar -vid $(VERACODE_API_ID) -vkey $(VERACODE_API_KEY) -f $(build.artifactstagingdirectory)\\Verademo-dotnet.zip || true\n      # VERACODE_API_ID and VERACODE_API_KEY environment variables must reference your API credentials.\n      # "|| true" specifies to continue build if Pipeline Scan discovers flaws.\n      # To fail the build for new flaws not listed in a baseline file, add an existing baseline file with "-bf <baseline filename>" and remove "|| true".\n\n  - task: PublishBuildArtifacts@1\n    displayName: Create Build Artifact for Veracode Pipeline Scan Results\n    inputs:\n      PathtoPublish: "results.json"\n      ArtifactName: "Build"\n      publishLocation: "Container"\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>r});var a=i(67294);const t={},s=a.createContext(t);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);