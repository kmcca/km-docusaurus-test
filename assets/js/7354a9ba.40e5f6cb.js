"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[84180],{97610:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>d,metadata:()=>t,toc:()=>l});var r=i(85893),s=i(11151);const d={title:"Android packaging",slug:"/r/compilation_android"},a=void 0,t={id:"guides/packaging/android",title:"Android packaging",description:"Your Android applications must meet specific packaging and compilation requirements before you can submit them for scanning.",source:"@site/docs/guides/03_packaging/04_android.md",sourceDirName:"guides/03_packaging",slug:"/r/compilation_android",permalink:"/km-docusaurus-test/r/compilation_android",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Android packaging",slug:"/r/compilation_android"},sidebar:"tutorialSidebar",previous:{title:"Static Analysis supported languages and platforms",permalink:"/km-docusaurus-test/r/r_supported_table"},next:{title:"Apex packaging",permalink:"/km-docusaurus-test/r/c_compilation_apex"}},o={},l=[{value:"Supported Android JREs and compilers",id:"supported-android-jres-and-compilers",level:2},{value:"Supported Android frameworks",id:"supported-android-frameworks",level:2},{value:"Compilation guidance for Debug builds",id:"compilation-guidance-for-debug-builds",level:2},{value:"Android Studio IDE",id:"android-studio-ide",level:3},{value:"Apache Ant",id:"apache-ant",level:3},{value:"Eclipse",id:"eclipse",level:3},{value:"Gradle",id:"gradle",level:3},{value:"javac",id:"javac",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Your Android applications must meet specific packaging and compilation requirements before you can submit them for scanning."}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/km-docusaurus-test/r/r_supported_table",children:"Supported languages and platforms"})," for instructions for other platforms."]}),"\n",(0,r.jsxs)(n.p,{children:["You can analyze applications using Veracode Static Analysis or Veracode Software Composition Analysis (SCA) agent-based scanning. For SCA agent-based scan requirements, see ",(0,r.jsx)(n.a,{href:"/km-docusaurus-test/r/Using_Veracode_SCA_with_Programming_Languages",children:"Using Veracode SCA with programming languages"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Veracode supports the scanning of Java and Kotlin applications compiled for Android. Veracode also supports these mobile frameworks:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/km-docusaurus-test/r/NET_MAUI_Application_Packaging",children:".NET MAUI"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/km-docusaurus-test/r/compilation_titan",children:"Appcelerator Titanium"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/km-docusaurus-test/r/compilation_phonegap",children:"Apache Cordova/Adobe PhoneGap"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/km-docusaurus-test/r/Dart_and_Flutter_Application_Packaging",children:"Dart and Flutter"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/km-docusaurus-test/r/compilation_ionic_framework",children:"Ionic"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/km-docusaurus-test/r/c_compilation_react",children:"React Native"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/km-docusaurus-test/r/compilation_xamarin",children:"Xamarin"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If you are using any of these frameworks, follow the instructions on the respective pages and do not follow the guidance for native Android apps."}),"\n",(0,r.jsx)(n.p,{children:"Veracode does not support other cross-platform development frameworks."}),"\n",(0,r.jsx)(n.h2,{id:"supported-android-jres-and-compilers",children:"Supported Android JREs and compilers"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Language"}),(0,r.jsx)(n.th,{children:"Platform"}),(0,r.jsx)(n.th,{children:"Supported versions"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Java and Kotlin"}),(0,r.jsx)(n.td,{children:"Android"}),(0,r.jsx)(n.td,{children:"Android 2.2\u201314 (API Levels 8\u201334), including Jetpack"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:["NOTE: ",(0,r.jsx)(n.a,{href:"/km-docusaurus-test/r/Initial_Support_and_Supported_Languages_Meaning",children:"Initial support"})," for Android 14"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Veracode supports scanning Android applications written in Java and Kotlin and packaged as an Android Package (APK) or Android App Bundle (AAB)."}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["Veracode can analyze Android apps without ",(0,r.jsx)(n.code,{children:"debug"})," symbols, but the results do not provide details about the finding location, such as the source files and code line numbers.\nVeracode recommends that you always provide a variant with debug symbols for analysis."]}),"\n",(0,r.jsx)(n.p,{children:"For a successful scan, you cannot obfuscate the Android application."}),"\n",(0,r.jsx)(n.h2,{id:"supported-android-frameworks",children:"Supported Android frameworks"}),"\n",(0,r.jsx)(n.p,{children:"Veracode supports and provides high-quality results for Android applications using these frameworks."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Framework"}),(0,r.jsx)(n.th,{children:"Supported versions"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"AWS Mobile SDK for Android"}),(0,r.jsx)(n.td,{children:"2.2.4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Parse Android SDK"}),(0,r.jsx)(n.td,{children:"1.9.4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ExoPlayer"}),(0,r.jsx)(n.td,{children:"2.x"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"compilation-guidance-for-debug-builds",children:"Compilation guidance for Debug builds"}),"\n",(0,r.jsx)(n.h3,{id:"android-studio-ide",children:"Android Studio IDE"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Select a debug build variant from the Build Variants menu."}),"\n",(0,r.jsxs)(n.li,{children:["Verify that you set all submodules to ",(0,r.jsx)(n.strong,{children:"Debug"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Name the APK using this format: ",(0,r.jsx)(n.code,{children:"{app_name}-{productFlavor}-debug.apk"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"apache-ant",children:"Apache Ant"}),"\n",(0,r.jsxs)(n.p,{children:["Enable the ",(0,r.jsx)(n.code,{children:"debug"})," property in the ",(0,r.jsx)(n.code,{children:"javac"})," tasks, for example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'<javac debug="on"> ... set of classes </javac>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"eclipse",children:"Eclipse"}),"\n",(0,r.jsxs)(n.p,{children:["Go to ",(0,r.jsx)(n.strong,{children:"Project"})," > ",(0,r.jsx)(n.strong,{children:"Properties"})," and select the Java Compiler properties. Under Classfile Generation, select these options:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Add variable attributes to generated class files"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Add line number attributes to generated class files"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Add source file name to generated class files"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"gradle",children:"Gradle"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"gradlew"})," with the ",(0,r.jsx)(n.code,{children:"assembleDebug"})," option."]}),"\n",(0,r.jsxs)(n.p,{children:["If you want to include ",(0,r.jsx)(n.a,{href:"/km-docusaurus-test/r/c_about_SCA",children:"Software Composition Analysis"})," (SCA) findings in your Static Analysis, you must also include the dependencies. This is the default behavior. If you had opted out of sharing dependencies, you must remove the ",(0,r.jsx)(n.code,{children:"dependenciesInfo"})," section from the ",(0,r.jsx)(n.code,{children:"build.gradle"})," file."]}),"\n",(0,r.jsx)(n.h3,{id:"javac",children:"javac"}),"\n",(0,r.jsxs)(n.p,{children:["With the standard ",(0,r.jsx)(n.code,{children:"javac"})," compiler, on the command line, add the ",(0,r.jsx)(n.code,{children:"-g"})," option to obtain debug symbols, for example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"javac -g foo.java\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>t,a:()=>a});var r=i(67294);const s={},d=r.createContext(s);function a(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);