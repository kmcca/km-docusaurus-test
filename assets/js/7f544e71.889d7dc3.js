"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[27866],{14338:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var n=t(85893),o=t(11151);const r={author:["Scott Jordan"],title:"Applying grace periods to a policy",slug:"/r/c_policy_grace_period"},a=void 0,s={id:"guides/findings/policies/grace_period/README",title:"Applying grace periods to a policy",description:"When creating policies, you can define remediation grace periods for Minimum Scan Score, Component Blocklist Enforcement, Component Licenses, and Vulnerability CVSS Score rules. You can also specify grace periods by severity that apply to Findings by Severity, Security Standard, Findings by CWE ID, and Findings in CWE Category rules.",source:"@site/docs/guides/09_findings/09_policies/08_grace_period/README.md",sourceDirName:"guides/09_findings/09_policies/08_grace_period",slug:"/r/c_policy_grace_period",permalink:"/km-docusaurus-test/r/c_policy_grace_period",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{author:["Scott Jordan"],title:"Applying grace periods to a policy",slug:"/r/c_policy_grace_period"},sidebar:"tutorialSidebar",previous:{title:"Applying an evaluation timeframe to a policy",permalink:"/km-docusaurus-test/r/c_policy_eval_time"},next:{title:"Apply grace periods to Veracode SCA policy rules",permalink:"/km-docusaurus-test/r/Apply_Grace_Periods_to_Veracode_SCA_Policy_Rules"}},c={},d=[{value:"First found date",id:"first-found-date",level:2}];function l(e){const i={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(i.p,{children:["When ",(0,n.jsx)(i.a,{href:"/km-docusaurus-test/r/t_create_policy",children:"creating policies"}),", you can define remediation grace periods for Minimum Scan Score, Component Blocklist Enforcement, Component Licenses, and Vulnerability CVSS Score rules. You can also specify grace periods by severity that apply to Findings by Severity, Security Standard, Findings by CWE ID, and Findings in CWE Category rules."]}),"\n",(0,n.jsx)(i.p,{children:"A remediation grace period is the amount of time in which you can fix or mitigate findings or raise the score for the application. During the grace period, the application passes policy on the condition that you fix or mitigate the affected findings or the scan meets the minimum score rule. Veracode applies the grace period starting from the first found date or, if re-opened, the last re-opened date. After the grace period expires, if you have not fixed or mitigated the findings, the application no longer passes policy. Veracode monitors grace periods as a date associated with each finding that persists across application scans."}),"\n",(0,n.jsxs)(i.p,{children:["If you set a grace period of ",(0,n.jsx)(i.code,{children:"0"})," for a certain severity or rule, Veracode evaluates applications with findings that violate the rule immediately as not passing the policy."]}),"\n",(0,n.jsx)(i.admonition,{type:"note",children:(0,n.jsx)(i.p,{children:"Grace periods only apply to findings that a custom rule defines as not allowed. For example, unless you have a custom rule that specifies that Informational findings are not allowed, Veracode ignores any grace period value you set for Informational findings."})}),"\n",(0,n.jsx)(i.p,{children:"When a grace period approaches its expiration date, Veracode sends a notification to the team associated with the application. When you apply a new policy to the application, Veracode recalculates the grace period due date for findings."}),"\n",(0,n.jsxs)(i.p,{children:["For more information specific to Veracode SCA rules, see ",(0,n.jsx)(i.a,{href:"/km-docusaurus-test/r/Apply_Grace_Periods_to_Veracode_SCA_Policy_Rules",children:"Apply grace periods to Veracode SCA policy rules"}),"."]}),"\n",(0,n.jsx)(i.h2,{id:"first-found-date",children:"First found date"}),"\n",(0,n.jsx)(i.p,{children:"Veracode uses the first found date for a finding to determine whether the finding is within its grace period. To calculate the first found date, Veracode uses the following information:"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.strong,{children:"Static and Dynamic findings"})}),"\n",(0,n.jsx)(i.p,{children:"Date when Veracode first identifies a finding in any sandbox within an application, regardless of whether you have promoted the sandbox or evaluated it against a policy."}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.strong,{children:"SCA findings"})}),"\n",(0,n.jsx)(i.p,{children:"The date when one of the following events occurs:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"A Veracode scan detects a library with a vulnerability."}),"\n",(0,n.jsx)(i.li,{children:"A CVE for a vulnerability within a library is published in any sandbox within an application, regardless of whether you have promoted the sandbox or evaluated it against a policy."}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"If the vulnerable library is removed then later re-added, the first found date resets to the date the library was re-added."})]})}function p(e={}){const{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},11151:(e,i,t)=>{t.d(i,{Z:()=>s,a:()=>a});var n=t(67294);const o={},r=n.createContext(o);function a(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);