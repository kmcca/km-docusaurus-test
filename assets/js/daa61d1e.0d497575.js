"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[98686],{70947:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var i=n(85893),a=n(11151);const t={title:"Scala packaging",slug:"/r/compilation_scala"},r=void 0,l={id:"guides/packaging/scala",title:"Scala packaging",description:"Your Scala applications must meet specific compilation requirements before you can submit them for scanning.",source:"@site/docs/guides/03_packaging/29_scala.md",sourceDirName:"guides/03_packaging",slug:"/r/compilation_scala",permalink:"/km-docusaurus-test/r/compilation_scala",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:29,frontMatter:{title:"Scala packaging",slug:"/r/compilation_scala"},sidebar:"tutorialSidebar",previous:{title:"Ruby on Rails packaging",permalink:"/km-docusaurus-test/r/compilation_ruby"},next:{title:"Transact-SQL packaging",permalink:"/km-docusaurus-test/r/Packaging_Transact_SQL_Applications"}},c={},d=[{value:"Supported Scala versions",id:"supported-scala-versions",level:2},{value:"Supported Scala frameworks",id:"supported-scala-frameworks",level:2},{value:"Compilation guidance",id:"compilation-guidance",level:2},{value:"Eclipse Scala IDE settings",id:"eclipse-scala-ide-settings",level:2},{value:"Ant settings",id:"ant-settings",level:2},{value:"Maven settings",id:"maven-settings",level:2},{value:"Sbt settings",id:"sbt-settings",level:2},{value:"Gradle settings",id:"gradle-settings",level:2}];function o(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:"Your Scala applications must meet specific compilation requirements before you can submit them for scanning."}),"\n",(0,i.jsxs)(s.p,{children:["See ",(0,i.jsx)(s.a,{href:"/km-docusaurus-test/r/r_supported_table",children:"Supported languages and platforms"})," for instructions for other platforms."]}),"\n",(0,i.jsxs)(s.p,{children:["You can analyze applications using Veracode Static Analysis or Veracode Software Composition Analysis (SCA) upload and scan, if licensed. For SCA agent-based scan requirements, see ",(0,i.jsx)(s.a,{href:"/km-docusaurus-test/r/Using_Veracode_SCA_with_Programming_Languages",children:"Using Veracode SCA with Programming Languages"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"supported-scala-versions",children:"Supported Scala versions"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Language"}),(0,i.jsx)(s.th,{children:"Version"}),(0,i.jsx)(s.th,{children:"Compilers"}),(0,i.jsx)(s.th,{children:"Platform"})]})}),(0,i.jsx)(s.tbody,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Scala"}),(0,i.jsx)(s.td,{children:"2.13 and earlier"}),(0,i.jsxs)(s.td,{children:["scalac 2.13 and earlier",(0,i.jsx)("br",{}),"javac 1.6\u20131.8"]}),(0,i.jsx)(s.td,{children:"JVM 1.6\u20131.9, 10"})]})})]}),"\n",(0,i.jsx)(s.p,{children:"Veracode can analyze Scala applications with or without debug symbols. Providing debug builds of Scala application code allows Veracode to provide source file and line number information about the location of flaws found. For a successful scan, you cannot obfuscate Scala applications."}),"\n",(0,i.jsx)(s.p,{children:"You must compile and submit Scala applications as JAR files. You can do this within the Eclipse Scala IDE by exporting the project as a JAR file."}),"\n",(0,i.jsx)(s.h2,{id:"supported-scala-frameworks",children:"Supported Scala frameworks"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Framework"}),(0,i.jsx)(s.th,{children:"Supported versions"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Akka"}),(0,i.jsx)(s.td,{children:"2.5"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Play"}),(0,i.jsx)(s.td,{children:"2.0\u20132.7.x"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Slick"}),(0,i.jsx)(s.td,{children:"3.x"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"compilation-guidance",children:"Compilation guidance"}),"\n",(0,i.jsx)(s.p,{children:"You must compile and submit Scala applications as JAR files without any third-party dependencies within the application code. Submit debug symbols for as much of the application as possible."}),"\n",(0,i.jsxs)(s.p,{children:["Using the standard Scala compiler, add the ",(0,i.jsx)(s.code,{children:"-g"})," option at the command line to obtain debug symbols, for example:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"scalac -g:vars foo.scala\n"})}),"\n",(0,i.jsx)(s.h2,{id:"eclipse-scala-ide-settings",children:"Eclipse Scala IDE settings"}),"\n",(0,i.jsx)(s.p,{children:"If you develop the project with the Eclipse Scala IDE:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Go to ",(0,i.jsx)(s.strong,{children:"Project"})," > ",(0,i.jsx)(s.strong,{children:"Properties"})," and select the Java Compiler properties. Under ",(0,i.jsx)(s.strong,{children:"Classfile Generation"}),", make these updates:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.strong,{children:"Add variable attributes to generated class files"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.strong,{children:"Add line number attributes to generated class files"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.strong,{children:"Add source file name to generated class files"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Go to ",(0,i.jsx)(s.strong,{children:"Project"})," > ",(0,i.jsx)(s.strong,{children:"Properties"})," and select the Scala Compiler properties. Under ",(0,i.jsx)(s.strong,{children:"Standard"}),", set ",(0,i.jsx)(s.code,{children:"g"})," to ",(0,i.jsx)(s.code,{children:"vars"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"ant-settings",children:"Ant settings"}),"\n",(0,i.jsxs)(s.p,{children:["If you build your project using ant, you must enable the ",(0,i.jsx)(s.code,{children:"debug"})," property in the ",(0,i.jsx)(s.code,{children:"javac"})," task by adding the ",(0,i.jsx)(s.code,{children:"-g:vars"})," parameter to ",(0,i.jsx)(s.code,{children:"scalac"}),". Add the ",(0,i.jsx)(s.code,{children:"-g:vars"})," parameter to the ",(0,i.jsx)(s.code,{children:"addparams"})," attribute. For example:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'<target name="build" depends="init">\n    <mkdir dir="${build.dir}"   />\n    <scalac srcdir="${sources.dir}"\n            destdir="${build.dir}"\n            addparams="-g:vars\n            classpathref="build.classpath">\n      <include name="compile/**/*.scala"   />\n      <exclude name="forget/**/*.scala"   />\n    </scalac>\n  </target>\n'})}),"\n",(0,i.jsx)(s.h2,{id:"maven-settings",children:"Maven settings"}),"\n",(0,i.jsxs)(s.p,{children:["If you build your project using the scala-maven-plugin for Maven, ensure that the ",(0,i.jsx)(s.code,{children:"javacGenerateDebugSymbols"})," parameter is set to ",(0,i.jsx)(s.code,{children:"true"}),", which is the default selection."]}),"\n",(0,i.jsx)(s.h2,{id:"sbt-settings",children:"Sbt settings"}),"\n",(0,i.jsx)(s.p,{children:"You can use Sbt from the command line within the source directory to build the project as a JAR, using this command:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"sbt 'set scalacOptions += \"-g:vars\"' compile package\n"})}),"\n",(0,i.jsxs)(s.p,{children:["When using the Play framework, you can use the ",(0,i.jsx)(s.code,{children:"sbt dist"})," task to build the application."]}),"\n",(0,i.jsx)(s.p,{children:"To build and upload your application using the Play framework:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Run one of these commands:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["From the Play console: ",(0,i.jsx)(s.code,{children:"dist"})]}),"\n",(0,i.jsxs)(s.li,{children:["From the command line: ",(0,i.jsx)(s.code,{children:"sbt dist"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["After the command completes successfully, navigate to the directory ",(0,i.jsx)(s.code,{children:"target/scala-VERSION/"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Upload all JAR artifacts you want to scan."}),"\n"]}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsxs)(s.p,{children:[(0,i.jsx)("code",{children:"sbt"})," may also build ",(0,i.jsx)("code",{children:"-sans-externalized"})," versions of individual JAR artifacts. If you upload both artifact versions, duplicate results may occur."]})}),"\n",(0,i.jsxs)(s.p,{children:["Alternatively, upload the primary ZIP artifact generated by ",(0,i.jsx)(s.code,{children:"sbt dist"})," in the ",(0,i.jsx)(s.code,{children:"target/universal/"})," directory instead of uploading individual JAR artifacts. However, because this ZIP contains many third-party libraries, uploading this ZIP may affect build results."]}),"\n",(0,i.jsx)(s.p,{children:"Veracode does not recommend using the sbt-assembly plugin."}),"\n",(0,i.jsxs)(s.p,{children:["If you use ",(0,i.jsx)(s.code,{children:"sbt docker"}),", submit the JAR files created as part of the build process, rather than the Docker image itself. These files are stored in the ",(0,i.jsx)(s.code,{children:"target/"})," directory after you build the application."]}),"\n",(0,i.jsx)(s.h2,{id:"gradle-settings",children:"Gradle settings"}),"\n",(0,i.jsx)(s.p,{children:"To build a Scala project using Gradle, use the Scala plugin. The Scala plugin adds line numbers and local variables to the generated binary artifact. For example:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"apply plugin: 'scala'\n"})}),"\n",(0,i.jsx)(s.p,{children:"You can then build the applications with this command:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"gradle build\n"})})]})}function h(e={}){const{wrapper:s}={...(0,a.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},11151:(e,s,n)=>{n.d(s,{Z:()=>l,a:()=>r});var i=n(67294);const a={},t=i.createContext(a);function r(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);