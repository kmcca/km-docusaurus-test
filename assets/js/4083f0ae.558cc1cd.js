"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[10761],{9390:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var s=t(85893),i=t(11151);const a={title:"Create a Dynamic Analysis with a user agent and blocklisted URLs using the REST API",slug:"/r/t_dynamic_useragent"},c=void 0,r={id:"guides/apis/rest_apis/dynamic_rest_api/dynamic_api_create_with_useragent_blocklisted",title:"Create a Dynamic Analysis with a user agent and blocklisted URLs using the REST API",description:"You can use the Dynamic Analysis API to create an analysis that scans multiple URLs, applies a user agent, and blocklists specific URLs.",source:"@site/docs/guides/14_apis/04_rest_apis/05_dynamic_rest_api/09_dynamic_api_create_with_useragent_blocklisted.md",sourceDirName:"guides/14_apis/04_rest_apis/05_dynamic_rest_api",slug:"/r/t_dynamic_useragent",permalink:"/km-docusaurus-test/r/t_dynamic_useragent",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Create a Dynamic Analysis with a user agent and blocklisted URLs using the REST API",slug:"/r/t_dynamic_useragent"},sidebar:"tutorialSidebar",previous:{title:"Create a Dynamic Analysis with a crawl script using the REST API",permalink:"/km-docusaurus-test/r/Create_a_Dynamic_Analysis_with_a_Crawl_Script_Using_the_REST_API"},next:{title:"Set Dynamic Analysis URL scan settings for an organization with the REST API",permalink:"/km-docusaurus-test/r/Set_Dynamic_Analysis_URL_Scan_Settings_for_an_Organization_with_the_REST_API"}},o={},l=[];function u(e){const n={admonition:"admonition",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"You can use the Dynamic Analysis API to create an analysis that scans multiple URLs, applies a user agent, and blocklists specific URLs."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"To complete this task:"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Enter values for the ",(0,s.jsx)(n.code,{children:"scan_config_request"}),", ",(0,s.jsx)(n.code,{children:"scan_setting"}),", ",(0,s.jsx)(n.code,{children:"blacklist_configuration"}),", ",(0,s.jsx)(n.code,{children:"org_info"}),", ",(0,s.jsx)(n.code,{children:"visibility"}),", and ",(0,s.jsx)(n.code,{children:"user_agent"})," properties in the JSON file."]}),"\n",(0,s.jsxs)(n.p,{children:["If you want to specify a custom header, set ",(0,s.jsx)(n.code,{children:'"type: "CUSTOM"'}),". If you use a predefined agent, such as Internet Explorer 11, you cannot include a ",(0,s.jsx)(n.code,{children:"custom_header"})," field."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Send the following request:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'http --auth-type=veracode_hmac POST "https://api.veracode.com/was/configservice/v1/analyses" < input.json\n'})}),"\n",(0,s.jsx)(n.p,{children:"This is an example of a Dynamic Analysis of multiple URLs. This analysis specifies the user agent string and the URLs to exclude from both the analysis and the URL scan."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The URLs that you blocklist at the URL-specific level take precedence over the URLs in this blocklist. For example, if you blocklist a URL in your URL configuration, but not in the configuration of the whole Dynamic Analysis, the URL configuration blocklist determines which URLs to exclude from the scan."})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Name-of-Your-Dynamic-Analysis",\n  "scans": [\n    {\n      "scan_config_request": {\n        "target_url": {\n          "url": "http://www.example.com/one/"\n        },\n        "scan_setting": {\n          "user_agent": {\n            "type": "CUSTOM",\n            "custom_header": "Custom User Agent String"\n          },\n          "blacklist_configuration": {\n            "blackList": [\n              {\n                "url": "http://www.example.com/one/black/",\n                "http_and_https": true\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      "scan_config_request": {\n        "target_url": {\n          "url": "http://www.example.com/two/",\n          "http_and_https": true\n        }\n      }\n    }\n  ],\n  "org_info": {\n    "email": "user@example.com"\n  },\n  "visibility": {\n    "setup_type": "SEC_LEADS_ONLY",\n    "team_identifiers": []\n  },\n  "scan_setting": {\n    "blacklist_configuration": {\n      "blackList": [\n        {\n          "url": "http://www.example.com/black1/",\n          "http_and_https": false\n        },\n        {\n          "url": "http://www.example.com/black2/site.html",\n          "http_and_https": false\n        }\n      ]\n    },\n    "user_agent": {\n      "type": "CUSTOM",\n      "custom_header": "Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko VERACODE"\n    }\n  }\n}     \n'})}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>c});var s=t(67294);const i={},a=s.createContext(i);function c(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);