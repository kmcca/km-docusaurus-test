"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[29191],{97882:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>l,toc:()=>o});var s=i(85893),a=i(11151);const t={title:"Pipeline scan example for using Maven with Azure DevOps",slug:"/r/Pipeline_Scan_Example_for_Using_Maven_with_Azure_DevOps"},r=void 0,l={id:"guides/integrations/cicd/pipeline_scan/pipeline_scan_azure_examples/r_azure_scan_maven_example",title:"Pipeline scan example for using Maven with Azure DevOps",description:"This example YAML code shows how to add a Pipeline Scan as a build stage in an Azure DevOps build pipeline that uses Maven on Unix.",source:"@site/docs/guides/04_integrations/03_cicd/09_pipeline_scan/06_pipeline_scan_azure_examples/03_r_azure_scan_maven_example.md",sourceDirName:"guides/04_integrations/03_cicd/09_pipeline_scan/06_pipeline_scan_azure_examples",slug:"/r/Pipeline_Scan_Example_for_Using_Maven_with_Azure_DevOps",permalink:"/km-docusaurus-test/r/Pipeline_Scan_Example_for_Using_Maven_with_Azure_DevOps",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Pipeline scan example for using Maven with Azure DevOps",slug:"/r/Pipeline_Scan_Example_for_Using_Maven_with_Azure_DevOps"},sidebar:"tutorialSidebar",previous:{title:"Pipeline Scan example for using Gradle with Azure DevOps",permalink:"/km-docusaurus-test/r/Pipeline_Scan_Example_for_Using_Gradle_with_Azure_DevOps"},next:{title:"Pipeline Scan example for using a baseline file with Azure DevOps",permalink:"/km-docusaurus-test/r/Pipeline_Scan_Example_for_Using_a_Baseline_File_with_Azure_Devops"}},p={},o=[];function c(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This example YAML code shows how to add a Pipeline Scan as a build stage in an Azure DevOps build pipeline that uses Maven on Unix."}),"\n",(0,s.jsxs)(n.p,{children:["The example includes a script that downloads and unzips ",(0,s.jsx)(n.code,{children:"pipeline-scan-LATEST.zip"}),", to ensure you have the latest version, then runs ",(0,s.jsx)(n.code,{children:"pipeline-scan.jar"})," using your ",(0,s.jsx)(n.a,{href:"/km-docusaurus-test/r/c_api_credentials3",children:"API credentials"}),". For improved stability, Veracode recommends that you change these scripts to use the ",(0,s.jsx)(n.a,{href:"https://hub.docker.com/r/veracode/pipeline-scan",children:"Pipeline Scan Docker image"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'trigger:\n  - master\npool:\n  vmImage: "ubuntu-latest"\nsteps:\n  - task: Maven@3\n    displayName: Build with Maven\n    inputs:\n      mavenPomFile: "app/pom.xml"\n      mavenOptions: "-Xmx3072m"\n      javaHomeOption: "JDKVersion"\n      jdkVersionOption: "1.8"\n      jdkArchitectureOption: "x64"\n      publishJUnitResults: true\n      testResultsFiles: "**/surefire-reports/TEST-*.xml"\n      goals: "package"\n  - task: Bash@3\n    displayName: Veracode Pipeline Scan\n    inputs:\n      targetType: "inline"\n      script: |\n        curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip\n        unzip -o pipeline-scan-LATEST.zip\n        java -jar pipeline-scan.jar -vid $(VERACODE_API_ID) -vkey $(VERACODE_API_KEY) -f /home/vsts/work/1/s/app/target/verademo.war || true\n      # VERACODE_API_ID and VERACODE_API_KEY environment variables must reference your API credentials.\n      # "|| true" specifies to continue build if Pipeline Scan discovers flaws.\n      # To fail the build for new flaws not listed in a baseline file, add an existing baseline file with "-bf <baseline filename>" and remove "|| true".\n  - publish: $(System.DefaultWorkingDirectory)/results.json # Save the scan results as a file named results.json.\n    artifact: VeracodeBaseline\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>r});var s=i(67294);const a={},t=s.createContext(a);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);