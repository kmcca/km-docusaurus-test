"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[89344],{63333:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var i=s(85893),n=s(11151);const a={title:"Create a policy with the REST API",slug:"/r/Creating_a_Policy_with_the_REST_API"},r=void 0,o={id:"guides/apis/rest_apis/policy_rest_api/policy_api_create",title:"Create a policy with the REST API",description:"Send the following request to create a policy:",source:"@site/docs/guides/14_apis/04_rest_apis/13_policy_rest_api/01_policy_api_create.md",sourceDirName:"guides/14_apis/04_rest_apis/13_policy_rest_api",slug:"/r/Creating_a_Policy_with_the_REST_API",permalink:"/km-docusaurus-test/r/Creating_a_Policy_with_the_REST_API",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Create a policy with the REST API",slug:"/r/Creating_a_Policy_with_the_REST_API"},sidebar:"tutorialSidebar",previous:{title:"Policy REST API",permalink:"/km-docusaurus-test/r/c_policy_rest_api"},next:{title:"Update a Policy with the REST API",permalink:"/km-docusaurus-test/r/t_update_policy"}},c={},l=[];function p(e){const t={a:"a",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Send the following request to create a ",(0,i.jsx)(t.a,{href:"/km-docusaurus-test/r/c_appsec_policies",children:"policy"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:"http --auth-type=veracode_hmac POST \u201chttps://api.veracode.com/appsec/v1/policies\u201d < input.json\n"})}),"\n",(0,i.jsx)(t.p,{children:"The API passes the JSON file that you populate with the necessary values as shown in this example payload:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "name": "TestPolicy",\n  "type": "BLACKLIST",\n  "description": "Policy to test create endpoint in end-to-end testing",\n  "vendor_policy": false,\n  "finding_rules": [\n    {\n      "type": "MAX_SEVERITY",\n      "scan_type": [\n        "DYNAMIC",\n        "MANUAL",\n        "STATIC"\n      ],\n      "value": "3"\n    }\n  ],\n  "scan_type": [\n    "SCA"\n  ],\n  "value": "14212"\n}      \n'})}),"\n",(0,i.jsxs)(t.p,{children:["The example payload specifies to create a policy with two ",(0,i.jsx)(t.a,{href:"/km-docusaurus-test/r/c_policy_rules",children:"policy rules"}),":"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"MAX_SEVERITY"})," rule that specifies to apply a ",(0,i.jsx)(t.a,{href:"/km-docusaurus-test/r/review_severity_exploitability",children:"finding-severity rating"})," of ",(0,i.jsx)(t.code,{children:"3"})," to all dynamic analysis, manual testing, and static analysis scans."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"BLACKLIST"})," rule that specifies to apply the ",(0,i.jsx)(t.a,{href:"/km-docusaurus-test/r/c_blocklist",children:"blocklist"})," for the organization, based on the organization ID, to all SCA scans."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"/km-docusaurus-test/r/Policy_API_Rules_Properties",children:"Policy API rules properties"})," describes each of the rule properties."]})]})}function u(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>o,a:()=>r});var i=s(67294);const n={},a=i.createContext(n);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);