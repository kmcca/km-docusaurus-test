"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[68275],{66126:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=t(85893),i=t(11151);const s={title:"Enable Perfect Forward Secrecy",slug:"/r/enable-perfect-forward-secrecy"},a=void 0,c={id:"guides/dynamic_analysis/dast_essentials/dast_essentials_tls_vulns/enable-perfect-forward-secrecy",title:"Enable Perfect Forward Secrecy",description:"Perfect Forward Secrecy (PFS) is unavailable with the server configuration. If the TLS encryption is broken once, recordings of previous connections are not secure and may be decrypted.",source:"@site/docs/guides/08_dynamic_analysis/15_dast_essentials/08_dast_essentials_tls_vulns/13_enable-perfect-forward-secrecy.md",sourceDirName:"guides/08_dynamic_analysis/15_dast_essentials/08_dast_essentials_tls_vulns",slug:"/r/enable-perfect-forward-secrecy",permalink:"/km-docusaurus-test/r/enable-perfect-forward-secrecy",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{title:"Enable Perfect Forward Secrecy",slug:"/r/enable-perfect-forward-secrecy"},sidebar:"tutorialSidebar",previous:{title:"Enable TLS encryption",permalink:"/km-docusaurus-test/r/enable-tls-encryption"},next:{title:"Increase TLS key size",permalink:"/km-docusaurus-test/r/increase-tls-key-size"}},o={},l=[{value:"Security assessment",id:"security-assessment",level:2},{value:"Vulnerability information",id:"vulnerability-information",level:2},{value:"Asymmetric encryption",id:"asymmetric-encryption",level:3},{value:"Vulnerability information",id:"vulnerability-information-1",level:3},{value:"Prevent attacks",id:"prevent-attacks",level:2},{value:"Nginx",id:"nginx",level:3},{value:"Apache",id:"apache",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Perfect Forward Secrecy (PFS) is unavailable with the server configuration. If the TLS encryption is broken once, recordings of previous connections are not secure and may be decrypted."}),"\n",(0,r.jsx)(n.h2,{id:"security-assessment",children:"Security assessment"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"Security_Assessment_EnablePerfectForwardSecrecy-1",src:t(76525).Z+"",width:"907",height:"332"}),"\nCVSS vector:  ",(0,r.jsxs)(n.a,{href:"https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?name=CVE-2015-7744&vector=AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",children:["AV",":N","/AC",":H","/PR",":N","/UI",":N","/S",":U","/C",":H","/I",":N","/A",":N"]})]}),"\n",(0,r.jsx)(n.h2,{id:"vulnerability-information",children:"Vulnerability information"}),"\n",(0,r.jsxs)(n.p,{children:["To understand PFS, it is necessary first to understand the basics of data transfer between clients and servers and asymmetric encryption methods, such as those used in the ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Secure_Shell",children:"Secure Shell (SSH)"}),", Secure Sockets Layer (SSL), and Transport Layer Security (TLS) protocols."]}),"\n",(0,r.jsx)(n.h3,{id:"asymmetric-encryption",children:"Asymmetric encryption"}),"\n",(0,r.jsx)(n.p,{children:"To secure online communications and protect them from third parties in asymmetric encryption, a pair of keys (public and private) are used. The private key is held secret by each part, whereas the public key is available to the outside world."}),"\n",(0,r.jsx)(n.p,{children:"In order for a client to send a message to a server, they utilize the public key from the server to encrypt that message. After the encrypted message is sent, the server utilizes its private key to decrypt the message and read it. I.e., the public key cannot be used to decrypt the message, only to encrypt it."}),"\n",(0,r.jsx)(n.h3,{id:"vulnerability-information-1",children:"Vulnerability information"}),"\n",(0,r.jsx)(n.p,{children:"Perfect forward secrecy contains several possible vulnerabilities. PFS is intended to hinder attackers from obtaining session keys that would allow them to decipher communications. What forward secrecy cannot prevent is an attack that seeks to influence how the session key, i.e., encryption key, is generated."}),"\n",(0,r.jsxs)(n.p,{children:["If an attacker is capable of modifying the functioning of the session key generator, thereby making the random values that are generated for the purpose of the key exchange predictable, then they will be able to decipher all future communications. This was the problem with the ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Dual_EC_DRBG",children:"Dual Elliptic Curve Deterministic Random Bit Generator"}),", which had a backdoor that allowed the generator to be modified in such a way."]}),"\n",(0,r.jsx)(n.p,{children:"Perfect forward secrecy also does not protect against a man-in-the-middle attack (MITM) in which an attacker can record and modify communications between a server and a client. While PFS protects against the decryption of such communication, it cannot prevent it from being collected if an attacker positions themself in the middle. In principle, obtaining and keeping such records leaves the door open for them to be deciphered in the future, once quantum computing becomes more widely available."}),"\n",(0,r.jsx)(n.p,{children:"Though not a vulnerability in itself, one of the reasons for the slow adoption of PFS on a wider scale is the additional computing resources that the server requires to generate unique session keys. PFS also lacks legacy support which also somewhat limits its implementation."}),"\n",(0,r.jsx)(n.p,{children:"Finally, implementing PFS results in a lack of internal visibility of data. Since it encrypts network communications, tech teams cannot locate problems and fix them because they cannot decrypt the traffic. There are workarounds to this problem, such as installing an SSL/TLS inspection device to act as an intermediary."}),"\n",(0,r.jsx)(n.h2,{id:"prevent-attacks",children:"Prevent attacks"}),"\n",(0,r.jsxs)(n.p,{children:["To enable PFS, configure your webserver to only use recent cipher suites that include PFS. For more information, see ",(0,r.jsx)(n.a,{href:"https://crashtest-security.com/secure-tls-configuration/",children:"Secure TLS configuration"})]}),"\n",(0,r.jsx)(n.p,{children:"Here is how to configure PFS manually in Nginx and Apache."}),"\n",(0,r.jsx)(n.h3,{id:"nginx",children:"Nginx"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Locate your SSL protocol configuration on the server type, assuming the base directory is ",(0,r.jsx)(n.code,{children:"/etc/nginx"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"grep -r ssl_protocol /etc/nginx\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Proceed to add the following lines to the configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ssl_protocols TLSv1.2 TLSv1.1 TLSv1;  \nssl_prefer_server_ciphers on;\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Set the SSL cipher and choose your preferred cipher configuration, either with or without RC4, or RC4 as a last resort. Recommended configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Restart Nginx using:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo service nginx restart\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"apache",children:"Apache"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Locate your SSL protocol configuration on the server type, assuming the base directory is ",(0,r.jsx)(n.code,{children:"/etc/apache"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'grep -i -r "SSLEngine" /etc/apache\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Proceed to add the following lines to the configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"SSLProtocol all -SSLv2 -SSLv3  \nSSLHonorCipherOrder on\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Set the SSL cipher and choose your preferred cipher configuration, either with or without RC4, or RC4 as a last resort. Recommended configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Restart Apache:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"apachectl -k restart\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},76525:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/Security_Assessment_EnablePerfectForwardSecrecy-1-37ac81e996023e8f8a699dd5742626f4.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>a});var r=t(67294);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);