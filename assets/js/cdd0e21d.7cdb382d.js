"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[61297],{41394:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var t=s(85893),i=s(11151);const r={title:"IDE and Pipeline scans explore data dictionary",slug:"/r/r_greenlight_explore"},d=void 0,a={id:"guides/findings/analytics/using_explore/greenlight_explore",title:"IDE and Pipeline scans explore data dictionary",description:"These definitions describe the dimensions and measures used on the IDE and Pipeline Scans explore in Veracode Analytics.",source:"@site/docs/guides/09_findings/01_analytics/07_using_explore/03_greenlight_explore.md",sourceDirName:"guides/09_findings/01_analytics/07_using_explore",slug:"/r/r_greenlight_explore",permalink:"/km-docusaurus-test/r/r_greenlight_explore",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"IDE and Pipeline scans explore data dictionary",slug:"/r/r_greenlight_explore"},sidebar:"tutorialSidebar",previous:{title:"Scans explore data dictionary",permalink:"/km-docusaurus-test/r/r_scans_explore"},next:{title:"Findings data dictionary",permalink:"/km-docusaurus-test/r/r_findings_explore"}},c={},l=[{value:"IDE and Pipeline scans dimensions",id:"ide-and-pipeline-scans-dimensions",level:2},{value:"IDE and Pipeline scans measures",id:"ide-and-pipeline-scans-measures",level:2}];function o(e){const n={h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"These definitions describe the dimensions and measures used on the IDE and Pipeline Scans explore in Veracode Analytics."}),"\n",(0,t.jsx)(n.h2,{id:"ide-and-pipeline-scans-dimensions",children:"IDE and Pipeline scans dimensions"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Dimension"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Account Name"}),(0,t.jsx)(n.td,{children:"The account name provided in the Veracode Platform."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"IDE"}),(0,t.jsx)(n.td,{children:"The development environment in which the scan ran."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"IDE Version"}),(0,t.jsx)(n.td,{children:"The version of the IDE where the scan started. If empty, it was an API scan."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"OS"}),(0,t.jsx)(n.td,{children:"The operating system of the IDE that the user is using."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Plugin Version"}),(0,t.jsx)(n.td,{children:"The version of the Veracode IDE scan plugin or Pipeline Scan JAR file."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Project Name"}),(0,t.jsx)(n.td,{children:"Optional field for the name of the project containing the scanned files, where applicable."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Project Reference"}),(0,t.jsx)(n.td,{children:"Optional field for the source control reference, revision, or branch of the development project."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Project URI"}),(0,t.jsx)(n.td,{children:"Optional field for the URI of the development project."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Results Size (MB)"}),(0,t.jsx)(n.td,{children:"The size of the JSON results file (MB)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Scan End Date"}),(0,t.jsx)(n.td,{children:"The date and time the scan completed. Possible values are date, month, month name, quarter, time, week, and year."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Scan Language"}),(0,t.jsx)(n.td,{children:"The language of the files to be scanned."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Scan Start Date"}),(0,t.jsx)(n.td,{children:"The date and time the scan started. Possible values are date, month, month name, quarter, time, week, and year."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Scan Status"}),(0,t.jsx)(n.td,{children:"The status of the scan."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Scan Type"}),(0,t.jsx)(n.td,{children:"How the scan was submitted. Active = User-Initiated IDE Scan, Passive = Auto-Initiated IDE Scan, API = Pipeline Scan API, DevOps = Pipeline Scan Pre-Release, Pipeline = Pipeline Scan."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"User Email"}),(0,t.jsx)(n.td,{children:"The email address of the user who submitted the scan."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"User Timeout"}),(0,t.jsx)(n.td,{children:"User-defined value for the number of seconds to wait before a scan times out. This field only populates if you provide a value."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"ide-and-pipeline-scans-measures",children:"IDE and Pipeline scans measures"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Measure"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Scan Counts"}),(0,t.jsx)(n.td,{children:"The total count of unique scans."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"User Counts"}),(0,t.jsx)(n.td,{children:"The count of distinct users."})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>d});var t=s(67294);const i={},r=t.createContext(i);function d(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);